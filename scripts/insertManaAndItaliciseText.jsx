function insertManaAndItaliciseText(inputString, italicStrings, flavourIndex, textLayerName, centredText, transformed){
var myFontSize = 64.000000; // Default to 64.000000, 110.000000 for split cards
var textColour = 0.000000;
/*
var rgbW = [252, 254, 219];
var rgbU = [169, 223, 249];
if(blackColour == 0) var rgbC = [199, 201, 190];
else var rgbC = [210, 201, 192];
var rgbR = [243, 146, 114];
var rgbG = [155, 209, 177];
*/
var rgbC = [204,194,193];
var rgbW = [255,251,214];
var rgbU = [170,224,250];
var rgbB = [159,146,143];
var rgbR = [249,169,143];
var rgbG = [154,211,175];

var phyrexianCard = false;
var phyrexianColour = rgbG;

// Find and replace the mana symbols in {} in the string with their NDPMTG
// equivalents, and note their indices and stuff
var symbolsList = ["{E}", "{W/P}", "{U/P}", "{B/P}", "{R/P}", "{G/P}", "{T}","{X}","{0}","{1}","{2}","{3}","{4}","{5}","{6}","{7}","{8}","{9}","{10}","{11}","{12}","{13}","{14}","{15}","{16}","{20}","{W}","{U}","{B}","{R}","{G}","{C}","{W/U}","{U/B}","{B/R}","{R/G}","{G/W}","{W/B}","{B/G}","{G/U}","{U/R}","{R/W}","{2/W}","{2/U}","{2/B}","{2/R}","{2/G}"];
var newSymbols  = ["e",   "Qp",    "Qp",    "Qp",    "Qp",    "Qp",    "ot", "ox", "o0", "o1", "o2", "o3", "o4", "o5", "o6", "o7", "o8", "o9", "oA",  "oB",  "oC",  "oD",  "oE",  "oF",  "oG",  "oK",  "ow", "ou", "ob", "or", "og",  "oc","QqLS", "QqMT", "QqNU", "QqOV", "QqPR", "QqLT", "QqNV", "QqPS", "QqMU", "QqOR", "QqWR", "QqWS", "QqWT", "QqWU", "QqWV" ];

//function locations(substring,string){
//  var a = [], i = -1;
//  while((i=string.indexOf(substring,i+1)) >= 0) a.push(i);
//  return a;
//}

//var quoteIndex = inputString.indexOf("\râ€”");
//var tempInputString = inputString.slice(flavourIndex+3,inputString.length);
//var quoteIndex = locations("\r",tempInputString);
if(flavourIndex > 0){
  var quoteIndex = inputString.indexOf("\r",flavourIndex+3);
}

var startIndex = []; var endIndex = [];
// Get the start and end indices of each given string
for(var i=0;i<italicStrings.length;i++){
  var currentStartIndex = inputString.indexOf(italicStrings[i]);
  if(currentStartIndex >= 0){
    startIndex.push(currentStartIndex);
    endIndex.push(currentStartIndex + italicStrings[i].length);
  }
}
startIndex = startIndex.sort(function (a,b) {return a-b;});
endIndex = endIndex.sort(function (a,b) {return a-b;});

// Offset each instance of flavour text by how many mana symbols appear before it
// Replacing mana symbols before detecting flavour text doesn't seem to work
for(var i=0;i<startIndex.length;i++){
  // Start indices
  var tempString = inputString.slice(0,startIndex[i]);
  var numLines = 0;
  for(var j=0;j<symbolsList.length;j++){
    var numOccurrences = occurrences(tempString, symbolsList[j], false);
    // Phyrexian colour check
    if(numOccurrences > 0 && j < 5){
      phyrexianCard = true;
      if(j == 0){
        phyrexianColour = rgbW;
      }
      else if(j == 1){
        phyrexianColour = rgbU;
      }
      else if(j == 2){
        phyrexianColour = rgbB;
      }
      else if(j == 3){
        phyrexianColour = rgbR;
      }
      else if(j == 4){
        phyrexianColour = rgbG;
      }
    }
    numLines += numOccurrences*(symbolsList[j].length - newSymbols[j].length);
  }
  if(startIndex[i]-(numLines) >= 0){
    startIndex[i] = startIndex[i]-numLines;
  }
  else{
    startIndex[i] = 0;
  }

  // End indices
  var tempString = inputString.slice(0,endIndex[i]);
  var numLines = 0;
  for(var j=0;j<symbolsList.length;j++){
    var numOccurrences = occurrences(tempString, symbolsList[j], false);
    // Phyrexian colour check
    if(numOccurrences > 0 && j < 5){
      phyrexianCard = true;
      if(j == 0){
        phyrexianColour = rgbW;
      }
      else if(j == 1){
        phyrexianColour = rgbU;
      }
      else if(j == 2){
        phyrexianColour = rgbB;
      }
      else if(j == 3){
        phyrexianColour = rgbR;
      }
      else if(j == 4){
        phyrexianColour = rgbG;
      }
    }
    numLines += numOccurrences*(symbolsList[j].length - newSymbols[j].length);
  }
  if(endIndex[i]-(numLines) >= 0){
    endIndex[i] = endIndex[i]-numLines;
  }
  else{
    endIndex[i] = 0;
  }
}

// var textColour = 255.000000;
var symbolIndices = [];
var currentMinimum = 0;
var startingIndex = 0;



// Find all instances of mana symbols in the text and replace them
while(true){
  var braceIndex1 = inputString.indexOf("{",startingIndex);
  var braceIndex2 = inputString.indexOf("}",startingIndex);
  if(braceIndex1 < 0){
    break;
  }
  else{
    var currentSymbol = inputString.slice(braceIndex1,braceIndex2+1);
    for(var i=0;i<symbolsList.length;i++){
      if(currentSymbol.valueOf() == symbolsList[i].valueOf()){
        inputString = inputString.replace(symbolsList[i], newSymbols[i]);
        symbolIndices.push(braceIndex1);
        startingIndex = braceIndex1 + 1;
      }
    }
  }
}

function arrayIndexOf(inputArray, reqValue, startingIndex){
  var index = -1;
  startingIndex = typeof startingIndex !== 'undefined' ? startingIndex : 0;
  for(var i=startingIndex;i<inputArray.length;i++){
    if(inputArray[i] == reqValue){
      index = inputArray[i];
      break;
    }
  }
  return index;
}

function occurrences(string, substring, allowOverlapping){
  string += "";
  substring += "";
  if(substring.length <= 0) return (string.length + 1);
  var n = 0,
    pos = 0,
    step = allowOverlapping ? 1: substring.length;

  while(true){
    pos = string.indexOf(substring, pos);
    if(pos >= 0){
      ++n;
      pos += step;
    } else break;
    }
    return n;
  }


// =======================================================
// Select the left text layer
var idslct = charIDToTypeID( "slct" );
    var desc118 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref23 = new ActionReference();
        var idLyr = charIDToTypeID( "Lyr " );
        ref23.putName( idLyr, textLayerName );
    desc118.putReference( idnull, ref23 );
    var idMkVs = charIDToTypeID( "MkVs" );
    desc118.putBoolean( idMkVs, false );
executeAction( idslct, desc118, DialogModes.NO );


if(textLayerName.indexOf("Noncreature") >= 0){
  // =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc119 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref101 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        var idOrdn = charIDToTypeID( "Ordn" );
        var idTrgt = charIDToTypeID( "Trgt" );
        ref101.putEnumerated( idTxLr, idOrdn, idTrgt );
    desc119.putReference( idnull, ref101 );
    var idT = charIDToTypeID( "T   " );
        var desc120 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc120.putString( idTxt, inputString );
        var idwarp = stringIDToTypeID( "warp" );
            var desc518 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc518.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc518.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc518.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc518.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc518.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc120.putObject( idwarp, idwarp, desc518 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc120.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc120.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc120.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list12 = new ActionList();
                var desc519 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idbox = stringIDToTypeID( "box" );
                desc519.putEnumerated( idTEXT, idTEXT, idbox );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc519.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc520 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc520.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc520.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc520.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc520.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc520.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc520.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc519.putObject( idTrnf, idTrnf, desc520 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc519.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc519.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc519.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc519.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc519.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc519.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc519.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc519.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbounds = stringIDToTypeID( "bounds" );
                    var desc521 = new ActionDescriptor();
                    var idTop = charIDToTypeID( "Top " );
                    desc521.putDouble( idTop, 0.000000 );
                    var idLeft = charIDToTypeID( "Left" );
                    desc521.putDouble( idLeft, 0.000000 );
                    var idBtom = charIDToTypeID( "Btom" );
                    desc521.putDouble( idBtom, 643.318176 );
                    var idRght = charIDToTypeID( "Rght" );
                    desc521.putDouble( idRght, 1117.895996 );
                var idRctn = charIDToTypeID( "Rctn" );
                desc519.putObject( idbounds, idRctn, desc521 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list12.putObject( idtextShape, desc519 );
        desc120.putList( idtextShape, list12 );
}

else if(transformed){
//   // =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc119 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref96 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        var idOrdn = charIDToTypeID( "Ordn" );
        var idTrgt = charIDToTypeID( "Trgt" );
        ref96.putEnumerated( idTxLr, idOrdn, idTrgt );
    desc119.putReference( idnull, ref96 );
    var idT = charIDToTypeID( "T   " );
       var desc120 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc120.putString( idTxt, inputString );
        var idwarp = stringIDToTypeID( "warp" );
            var desc468 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc468.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc468.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc468.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc468.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc468.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc120.putObject( idwarp, idwarp, desc468 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc120.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc120.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc120.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list65 = new ActionList();
                var desc469 = new ActionDescriptor();
                var idPath = charIDToTypeID( "Path" );
                    var desc470 = new ActionDescriptor();
                    var idpathComponents = stringIDToTypeID( "pathComponents" );
                        var list66 = new ActionList();
                            var desc471 = new ActionDescriptor();
                            var idshapeOperation = stringIDToTypeID( "shapeOperation" );
                            var idshapeOperation = stringIDToTypeID( "shapeOperation" );
                            var idxor = stringIDToTypeID( "xor" );
                            desc471.putEnumerated( idshapeOperation, idshapeOperation, idxor );
                            var idSbpL = charIDToTypeID( "SbpL" );
                                var list67 = new ActionList();
                                    var desc472 = new ActionDescriptor();
                                    var idClsp = charIDToTypeID( "Clsp" );
                                    desc472.putBoolean( idClsp, true );
                                    var idPts = charIDToTypeID( "Pts " );
                                        var list68 = new ActionList();
                                            var desc473 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc474 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc474.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc474.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc473.putObject( idAnch, idPnt, desc474 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc475 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc475.putUnitDouble( idHrzn, idRlt, 490.296204 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc475.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc473.putObject( idFwd, idPnt, desc475 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc476 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc476.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc476.putUnitDouble( idVrtc, idRlt, 1580 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc473.putObject( idBwd, idPnt, desc476 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc473.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc473 );
                                            var desc477 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc478 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc478.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc478.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc477.putObject( idAnch, idPnt, desc478 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc479 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc479.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc479.putUnitDouble( idVrtc, idRlt, 1342.151245 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc477.putObject( idFwd, idPnt, desc479 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc480 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc480.putUnitDouble( idHrzn, idRlt, 861.703796 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc480.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc477.putObject( idBwd, idPnt, desc480 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc477.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc477 );
                                            var desc481 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc482 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc482.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc482.putUnitDouble( idVrtc, idRlt, 1580.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc481.putObject( idAnch, idPnt, desc482 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc483 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc483.putUnitDouble( idHrzn, idRlt, 1188.837769 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc483.putUnitDouble( idVrtc, idRlt, 1580.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc481.putObject( idFwd, idPnt, desc483 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc484 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc484.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc484.putUnitDouble( idVrtc, idRlt, 1580.0 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc481.putObject( idBwd, idPnt, desc484 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc481.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc481 );
                                            var desc485 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc486 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc486.putUnitDouble( idHrzn, idRlt, 1100.500000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc486.putUnitDouble( idVrtc, idRlt, 1580.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc485.putObject( idAnch, idPnt, desc486 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc487 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc487.putUnitDouble( idHrzn, idRlt, 1123.248901 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc487.putUnitDouble( idVrtc, idRlt, 1580 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc485.putObject( idFwd, idPnt, desc487 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc488 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc488.putUnitDouble( idHrzn, idRlt, 1144.662231 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc488.putUnitDouble( idVrtc, idRlt, 1580.00000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc485.putObject( idBwd, idPnt, desc488 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc485.putBoolean( idSmoo, true );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc485 );
                                            var desc489 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc490 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc490.putUnitDouble( idHrzn, idRlt, 1146.500000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc490.putUnitDouble( idVrtc, idRlt, 1580.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc489.putObject( idAnch, idPnt, desc490 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc491 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc491.putUnitDouble( idHrzn, idRlt, 1121.447815 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc491.putUnitDouble( idVrtc, idRlt, 1580 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc489.putObject( idFwd, idPnt, desc491 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc492 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc492.putUnitDouble( idHrzn, idRlt, 1158.301147 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc492.putUnitDouble( idVrtc, idRlt, 1580 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc489.putObject( idBwd, idPnt, desc492 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc489.putBoolean( idSmoo, true );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc489 );
                                            var desc493 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc494 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc494.putUnitDouble( idHrzn, idRlt, 1029.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc494.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc493.putObject( idAnch, idPnt, desc494 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc495 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc495.putUnitDouble( idHrzn, idRlt, 725.697021 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc495.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc493.putObject( idFwd, idPnt, desc495 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc496 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc496.putUnitDouble( idHrzn, idRlt, 1028.887817 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc496.putUnitDouble( idVrtc, idRlt, 1774.431519 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc493.putObject( idBwd, idPnt, desc496 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc493.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc493 );
                                            var desc497 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc498 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc498.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc498.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc497.putObject( idAnch, idPnt, desc498 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc499 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc499.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc499.putUnitDouble( idVrtc, idRlt, 1609.187744 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc497.putObject( idFwd, idPnt, desc499 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc500 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc500.putUnitDouble( idHrzn, idRlt, 422.303009 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc500.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc497.putObject( idBwd, idPnt, desc500 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc497.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc497 );
                                    desc472.putList( idPts, list68 );
                                var idSbpl = charIDToTypeID( "Sbpl" );
                                list67.putObject( idSbpl, desc472 );
                            desc471.putList( idSbpL, list67 );
                        var idPaCm = charIDToTypeID( "PaCm" );
                        list66.putObject( idPaCm, desc471 );
                    desc470.putList( idpathComponents, list66 );
                var idpathClass = stringIDToTypeID( "pathClass" );
                desc469.putObject( idPath, idpathClass, desc470 );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idbox = stringIDToTypeID( "box" );
                desc469.putEnumerated( idTEXT, idTEXT, idbox );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc469.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc501 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc501.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc501.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc501.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc501.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc501.putDouble( idtx, -238.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc501.putDouble( idty, -2375.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc469.putObject( idTrnf, idTrnf, desc501 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc469.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc469.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc469.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc469.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbounds = stringIDToTypeID( "bounds" );
                    var desc502 = new ActionDescriptor();
                    var idTop = charIDToTypeID( "Top " );
                    desc502.putDouble( idTop, 2375.000000 );
                    var idLeft = charIDToTypeID( "Left" );
                    desc502.putDouble( idLeft, 238.000000 );
                    var idBtom = charIDToTypeID( "Btom" );
                    desc502.putDouble( idBtom, 3007.500000 );
                    var idRght = charIDToTypeID( "Rght" );
                    desc502.putDouble( idRght, 1352.000000 );
                var idRctn = charIDToTypeID( "Rctn" );
                desc469.putObject( idbounds, idRctn, desc502 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list65.putObject( idtextShape, desc469 );
        desc120.putList( idtextShape, list65 );
}

else{
//   // =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc119 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref96 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        var idOrdn = charIDToTypeID( "Ordn" );
        var idTrgt = charIDToTypeID( "Trgt" );
        ref96.putEnumerated( idTxLr, idOrdn, idTrgt );
    desc119.putReference( idnull, ref96 );
    var idT = charIDToTypeID( "T   " );
       var desc120 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc120.putString( idTxt, inputString );
        var idwarp = stringIDToTypeID( "warp" );
            var desc468 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc468.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc468.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc468.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc468.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc468.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc120.putObject( idwarp, idwarp, desc468 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc120.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc120.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc120.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list65 = new ActionList();
                var desc469 = new ActionDescriptor();
                var idPath = charIDToTypeID( "Path" );
                    var desc470 = new ActionDescriptor();
                    var idpathComponents = stringIDToTypeID( "pathComponents" );
                        var list66 = new ActionList();
                            var desc471 = new ActionDescriptor();
                            var idshapeOperation = stringIDToTypeID( "shapeOperation" );
                            var idshapeOperation = stringIDToTypeID( "shapeOperation" );
                            var idxor = stringIDToTypeID( "xor" );
                            desc471.putEnumerated( idshapeOperation, idshapeOperation, idxor );
                            var idSbpL = charIDToTypeID( "SbpL" );
                                var list67 = new ActionList();
                                    var desc472 = new ActionDescriptor();
                                    var idClsp = charIDToTypeID( "Clsp" );
                                    desc472.putBoolean( idClsp, true );
                                    var idPts = charIDToTypeID( "Pts " );
                                        var list68 = new ActionList();
                                            var desc473 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc474 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc474.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc474.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc473.putObject( idAnch, idPnt, desc474 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc475 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc475.putUnitDouble( idHrzn, idRlt, 490.296204 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc475.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc473.putObject( idFwd, idPnt, desc475 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc476 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc476.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc476.putUnitDouble( idVrtc, idRlt, 1398.312256 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc473.putObject( idBwd, idPnt, desc476 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc473.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc473 );
                                            var desc477 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc478 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc478.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc478.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc477.putObject( idAnch, idPnt, desc478 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc479 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc479.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc479.putUnitDouble( idVrtc, idRlt, 1342.151245 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc477.putObject( idFwd, idPnt, desc479 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc480 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc480.putUnitDouble( idHrzn, idRlt, 861.703796 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc480.putUnitDouble( idVrtc, idRlt, 1187.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc477.putObject( idBwd, idPnt, desc480 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc477.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc477 );
                                            var desc481 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc482 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc482.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc482.putUnitDouble( idVrtc, idRlt, 1651.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc481.putObject( idAnch, idPnt, desc482 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc483 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc483.putUnitDouble( idHrzn, idRlt, 1188.837769 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc483.putUnitDouble( idVrtc, idRlt, 1651.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc481.putObject( idFwd, idPnt, desc483 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc484 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc484.putUnitDouble( idHrzn, idRlt, 1233.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc484.putUnitDouble( idVrtc, idRlt, 1496.848755 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc481.putObject( idBwd, idPnt, desc484 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc481.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc481 );
                                            var desc485 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc486 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc486.putUnitDouble( idHrzn, idRlt, 1100.500000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc486.putUnitDouble( idVrtc, idRlt, 1651.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc485.putObject( idAnch, idPnt, desc486 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc487 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc487.putUnitDouble( idHrzn, idRlt, 1083.248901 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc487.putUnitDouble( idVrtc, idRlt, 1651.493042 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc485.putObject( idFwd, idPnt, desc487 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc488 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc488.putUnitDouble( idHrzn, idRlt, 1144.662231 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc488.putUnitDouble( idVrtc, idRlt, 1651.500000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc485.putObject( idBwd, idPnt, desc488 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc485.putBoolean( idSmoo, true );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc485 );
                                            var desc489 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc490 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc490.putUnitDouble( idHrzn, idRlt, 1046.500000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc490.putUnitDouble( idVrtc, idRlt, 1655.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc489.putObject( idAnch, idPnt, desc490 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc491 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc491.putUnitDouble( idHrzn, idRlt, 1021.447815 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc491.putUnitDouble( idVrtc, idRlt, 1672.251709 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc489.putObject( idFwd, idPnt, desc491 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc492 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc492.putUnitDouble( idHrzn, idRlt, 1058.301147 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc492.putUnitDouble( idVrtc, idRlt, 1646.873413 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc489.putObject( idBwd, idPnt, desc492 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc489.putBoolean( idSmoo, true );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc489 );
                                            var desc493 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc494 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc494.putUnitDouble( idHrzn, idRlt, 1029.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc494.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc493.putObject( idAnch, idPnt, desc494 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc495 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc495.putUnitDouble( idHrzn, idRlt, 725.697021 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc495.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc493.putObject( idFwd, idPnt, desc495 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc496 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc496.putUnitDouble( idHrzn, idRlt, 1028.887817 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc496.putUnitDouble( idVrtc, idRlt, 1774.431519 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc493.putObject( idBwd, idPnt, desc496 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc493.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc493 );
                                            var desc497 = new ActionDescriptor();
                                            var idAnch = charIDToTypeID( "Anch" );
                                                var desc498 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc498.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc498.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc497.putObject( idAnch, idPnt, desc498 );
                                            var idFwd = charIDToTypeID( "Fwd " );
                                                var desc499 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc499.putUnitDouble( idHrzn, idRlt, 119.000000 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc499.putUnitDouble( idVrtc, idRlt, 1609.187744 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc497.putObject( idFwd, idPnt, desc499 );
                                            var idBwd = charIDToTypeID( "Bwd " );
                                                var desc500 = new ActionDescriptor();
                                                var idHrzn = charIDToTypeID( "Hrzn" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc500.putUnitDouble( idHrzn, idRlt, 422.303009 );
                                                var idVrtc = charIDToTypeID( "Vrtc" );
                                                var idRlt = charIDToTypeID( "#Rlt" );
                                                desc500.putUnitDouble( idVrtc, idRlt, 1820.000000 );
                                            var idPnt = charIDToTypeID( "Pnt " );
                                            desc497.putObject( idBwd, idPnt, desc500 );
                                            var idSmoo = charIDToTypeID( "Smoo" );
                                            desc497.putBoolean( idSmoo, false );
                                        var idPthp = charIDToTypeID( "Pthp" );
                                        list68.putObject( idPthp, desc497 );
                                    desc472.putList( idPts, list68 );
                                var idSbpl = charIDToTypeID( "Sbpl" );
                                list67.putObject( idSbpl, desc472 );
                            desc471.putList( idSbpL, list67 );
                        var idPaCm = charIDToTypeID( "PaCm" );
                        list66.putObject( idPaCm, desc471 );
                    desc470.putList( idpathComponents, list66 );
                var idpathClass = stringIDToTypeID( "pathClass" );
                desc469.putObject( idPath, idpathClass, desc470 );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idbox = stringIDToTypeID( "box" );
                desc469.putEnumerated( idTEXT, idTEXT, idbox );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc469.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc501 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc501.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc501.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc501.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc501.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc501.putDouble( idtx, -238.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc501.putDouble( idty, -2375.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc469.putObject( idTrnf, idTrnf, desc501 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc469.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc469.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc469.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc469.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc469.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbounds = stringIDToTypeID( "bounds" );
                    var desc502 = new ActionDescriptor();
                    var idTop = charIDToTypeID( "Top " );
                    desc502.putDouble( idTop, 2375.000000 );
                    var idLeft = charIDToTypeID( "Left" );
                    desc502.putDouble( idLeft, 238.000000 );
                    var idBtom = charIDToTypeID( "Btom" );
                    desc502.putDouble( idBtom, 3007.500000 );
                    var idRght = charIDToTypeID( "Rght" );
                    desc502.putDouble( idRght, 1352.000000 );
                var idRctn = charIDToTypeID( "Rctn" );
                desc469.putObject( idbounds, idRctn, desc502 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list65.putObject( idtextShape, desc469 );
        desc120.putList( idtextShape, list65 );
}

      var list12 = new ActionList();
      desc25 = new ActionDescriptor();
      var idFrom = charIDToTypeID( "From" );
      desc25.putInteger( idFrom, 0 );
      var idT = charIDToTypeID( "T   " );
      desc25.putInteger( idT, inputString.length );
      var idTxtS = charIDToTypeID( "TxtS" );
          desc26 = new ActionDescriptor();
          var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
          desc26.putBoolean( idstyleSheetHasParent, true );
          var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
          desc26.putString( idfontPostScriptName, "MPlantin" );
          var idFntN = charIDToTypeID( "FntN" );
          desc26.putString( idFntN, "MPlantin" );
          var idFntS = charIDToTypeID( "FntS" );
          desc26.putString( idFntS, "Regular" );
          var idScrp = charIDToTypeID( "Scrp" );
          desc26.putInteger( idScrp, 0 );
          var idFntT = charIDToTypeID( "FntT" );
          desc26.putInteger( idFntT, 1 );
          var idSz = charIDToTypeID( "Sz  " );
          var idPnt = charIDToTypeID( "#Pnt" );
          desc26.putUnitDouble( idSz, idPnt, myFontSize );
          var idHrzS = charIDToTypeID( "HrzS" );
          desc26.putDouble( idHrzS, 100.000000 );
          var idVrtS = charIDToTypeID( "VrtS" );
          desc26.putDouble( idVrtS, 100.000000 );
          var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
          desc26.putBoolean( idsyntheticBold, false );
          var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
          desc26.putBoolean( idsyntheticItalic, false );
          var idautoLeading = stringIDToTypeID( "autoLeading" );
          desc26.putBoolean( idautoLeading, false );
          var idLdng = charIDToTypeID( "Ldng" );
          var idPnt = charIDToTypeID( "#Pnt" );
          desc26.putUnitDouble( idLdng, idPnt, myFontSize );
          var idTrck = charIDToTypeID( "Trck" );
          desc26.putInteger( idTrck, 0 );
          var idBsln = charIDToTypeID( "Bsln" );
          var idPnt = charIDToTypeID( "#Pnt" );
          desc26.putUnitDouble( idBsln, idPnt, 0.000000 );
          var idcharacterRotation = stringIDToTypeID( "characterRotation" );
          desc26.putDouble( idcharacterRotation, 0.000000 );
          var idAtKr = charIDToTypeID( "AtKr" );
          var idAtKr = charIDToTypeID( "AtKr" );
          var idmetricsKern = stringIDToTypeID( "metricsKern" );
          desc26.putEnumerated( idAtKr, idAtKr, idmetricsKern );
          var idfontCaps = stringIDToTypeID( "fontCaps" );
          var idfontCaps = stringIDToTypeID( "fontCaps" );
          var idNrml = charIDToTypeID( "Nrml" );
          desc26.putEnumerated( idfontCaps, idfontCaps, idNrml );
          var idbaseline = stringIDToTypeID( "baseline" );
          var idbaseline = stringIDToTypeID( "baseline" );
          var idNrml = charIDToTypeID( "Nrml" );
          desc26.putEnumerated( idbaseline, idbaseline, idNrml );
          var idotbaseline = stringIDToTypeID( "otbaseline" );
          var idotbaseline = stringIDToTypeID( "otbaseline" );
          var idNrml = charIDToTypeID( "Nrml" );
          desc26.putEnumerated( idotbaseline, idotbaseline, idNrml );
          var idstrikethrough = stringIDToTypeID( "strikethrough" );
          var idstrikethrough = stringIDToTypeID( "strikethrough" );
          var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
          desc26.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
          var idUndl = charIDToTypeID( "Undl" );
          var idUndl = charIDToTypeID( "Undl" );
          var idunderlineOff = stringIDToTypeID( "underlineOff" );
          desc26.putEnumerated( idUndl, idUndl, idunderlineOff );
          var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
          var idPnt = charIDToTypeID( "#Pnt" );
          desc26.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
          var idligature = stringIDToTypeID( "ligature" );
          desc26.putBoolean( idligature, true );
          var idaltligature = stringIDToTypeID( "altligature" );
          desc26.putBoolean( idaltligature, false );
          var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
          desc26.putBoolean( idcontextualLigatures, true );
          var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
          desc26.putBoolean( idalternateLigatures, false );
          var idoldStyle = stringIDToTypeID( "oldStyle" );
          desc26.putBoolean( idoldStyle, false );
          var idfractions = stringIDToTypeID( "fractions" );
          desc26.putBoolean( idfractions, false );
          var idordinals = stringIDToTypeID( "ordinals" );
          desc26.putBoolean( idordinals, false );
          var idswash = stringIDToTypeID( "swash" );
          desc26.putBoolean( idswash, false );
          var idtitling = stringIDToTypeID( "titling" );
          desc26.putBoolean( idtitling, false );
          var idconnectionForms = stringIDToTypeID( "connectionForms" );
          desc26.putBoolean( idconnectionForms, true );
          var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
          desc26.putBoolean( idstylisticAlternates, false );
          var idornaments = stringIDToTypeID( "ornaments" );
          desc26.putBoolean( idornaments, false );
          var idfigureStyle = stringIDToTypeID( "figureStyle" );
          var idfigureStyle = stringIDToTypeID( "figureStyle" );
          var idNrml = charIDToTypeID( "Nrml" );
          desc26.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
          var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
          desc26.putBoolean( idproportionalMetrics, false );
          var idkana = stringIDToTypeID( "kana" );
          desc26.putBoolean( idkana, false );
          var iditalics = stringIDToTypeID( "italics" );
          desc26.putBoolean( iditalics, false );
          var idruby = stringIDToTypeID( "ruby" );
          desc26.putBoolean( idruby, false );
          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
          var idwithStream = stringIDToTypeID( "withStream" );
          desc26.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
          var idtextLanguage = stringIDToTypeID( "textLanguage" );
          var idtextLanguage = stringIDToTypeID( "textLanguage" );
          var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
          desc26.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
          var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
          var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
          var iddefaultForm = stringIDToTypeID( "defaultForm" );
          desc26.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
          var idmojiZume = stringIDToTypeID( "mojiZume" );
          desc26.putDouble( idmojiZume, 0.000000 );
          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
          var idroman = stringIDToTypeID( "roman" );
          desc26.putEnumerated( idgridAlignment, idgridAlignment, idroman );
          var idenableWariChu = stringIDToTypeID( "enableWariChu" );
          desc26.putBoolean( idenableWariChu, false );
          var idwariChuCount = stringIDToTypeID( "wariChuCount" );
          desc26.putInteger( idwariChuCount, 2 );
          var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
          desc26.putInteger( idwariChuLineGap, 0 );
          var idwariChuScale = stringIDToTypeID( "wariChuScale" );
          desc26.putDouble( idwariChuScale, 0.500000 );
          var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
          desc26.putInteger( idwariChuWidow, 2 );
          var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
          desc26.putInteger( idwariChuOrphan, 2 );
          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
          var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
          desc26.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
          var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
          desc26.putInteger( idtcyUpDown, 0 );
          var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
          desc26.putInteger( idtcyLeftRight, 0 );
          var idleftAki = stringIDToTypeID( "leftAki" );
          desc26.putDouble( idleftAki, -1.000000 );
          var idrightAki = stringIDToTypeID( "rightAki" );
          desc26.putDouble( idrightAki, -1.000000 );
          var idjiDori = stringIDToTypeID( "jiDori" );
          desc26.putInteger( idjiDori, 0 );
          var idnoBreak = stringIDToTypeID( "noBreak" );
          desc26.putBoolean( idnoBreak, false );
          var idClr = charIDToTypeID( "Clr " );
              desc27 = new ActionDescriptor();
              var idRd = charIDToTypeID( "Rd  " );
              desc27.putDouble( idRd, textColour );
              var idGrn = charIDToTypeID( "Grn " );
              desc27.putDouble( idGrn, textColour );
              var idBl = charIDToTypeID( "Bl  " );
              desc27.putDouble( idBl, textColour );
          var idRGBC = charIDToTypeID( "RGBC" );
          desc26.putObject( idClr, idRGBC, desc27 );
          var idstrokeColor = stringIDToTypeID( "strokeColor" );
              desc28 = new ActionDescriptor();
              var idRd = charIDToTypeID( "Rd  " );
              desc28.putDouble( idRd, 0.000000 );
              var idGrn = charIDToTypeID( "Grn " );
              desc28.putDouble( idGrn, 0.000000 );
              var idBl = charIDToTypeID( "Bl  " );
              desc28.putDouble( idBl, 0.000000 );
          var idRGBC = charIDToTypeID( "RGBC" );
          desc26.putObject( idstrokeColor, idRGBC, desc28 );
          var idFl = charIDToTypeID( "Fl  " );
          desc26.putBoolean( idFl, true );
          var idStrk = charIDToTypeID( "Strk" );
          desc26.putBoolean( idStrk, false );
          var idfillFirst = stringIDToTypeID( "fillFirst" );
          desc26.putBoolean( idfillFirst, false );
          var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
          desc26.putBoolean( idfillOverPrint, false );
          var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
          desc26.putBoolean( idstrokeOverPrint, false );
          var idlineCap = stringIDToTypeID( "lineCap" );
          var idlineCap = stringIDToTypeID( "lineCap" );
          var idbuttCap = stringIDToTypeID( "buttCap" );
          desc26.putEnumerated( idlineCap, idlineCap, idbuttCap );
          var idlineJoin = stringIDToTypeID( "lineJoin" );
          var idlineJoin = stringIDToTypeID( "lineJoin" );
          var idmiterJoin = stringIDToTypeID( "miterJoin" );
          desc26.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
          var idlineWidth = stringIDToTypeID( "lineWidth" );
          var idPnt = charIDToTypeID( "#Pnt" );
          desc26.putUnitDouble( idlineWidth, idPnt, 0.009999 );
          var idmiterLimit = stringIDToTypeID( "miterLimit" );
          var idPnt = charIDToTypeID( "#Pnt" );
          desc26.putUnitDouble( idmiterLimit, idPnt, 0.009999 );
          var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
          desc26.putDouble( idlineDashoffset, 0.000000 );
      var idTxtS = charIDToTypeID( "TxtS" );
      desc25.putObject( idTxtS, idTxtS, desc26 );
      var currentLayerReference = desc25;

      if(startIndex.length > 0){
        for(var i=0;i<startIndex.length;i++){
          // Italics text
          var idTxtt = charIDToTypeID( "Txtt" );
          list12.putObject( idTxtt, currentLayerReference );
              desc125 = new ActionDescriptor();
              var idFrom = charIDToTypeID( "From" );
              desc125.putInteger( idFrom, startIndex[i] );
              var idT = charIDToTypeID( "T   " );
              desc125.putInteger( idT, endIndex[i] );
              var idTxtS = charIDToTypeID( "TxtS" );
                  desc126 = new ActionDescriptor();
                  var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                  desc126.putBoolean( idstyleSheetHasParent, true );
                  var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                  desc126.putString( idfontPostScriptName, "MPlantin-Italic" );
                  var idFntN = charIDToTypeID( "FntN" );
                  desc126.putString( idFntN, "MPlantin-Italic" );
                  var idFntS = charIDToTypeID( "FntS" );
                  desc126.putString( idFntS, "Regular" );
                  var idScrp = charIDToTypeID( "Scrp" );
                  desc126.putInteger( idScrp, 0 );
                  var idFntT = charIDToTypeID( "FntT" );
                  desc126.putInteger( idFntT, 1 );
                  var idSz = charIDToTypeID( "Sz  " );
                  var idPnt = charIDToTypeID( "#Pnt" );
                  desc126.putUnitDouble( idSz, idPnt, myFontSize );
                  var idHrzS = charIDToTypeID( "HrzS" );
                  desc126.putDouble( idHrzS, 100.000000 );
                  var idVrtS = charIDToTypeID( "VrtS" );
                  desc126.putDouble( idVrtS, 100.000000 );
                  var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                  desc126.putBoolean( idsyntheticBold, false );
                  var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                  desc126.putBoolean( idsyntheticItalic, false );
                  var idautoLeading = stringIDToTypeID( "autoLeading" );
                  desc126.putBoolean( idautoLeading, false );
                  var idLdng = charIDToTypeID( "Ldng" );
                  var idPnt = charIDToTypeID( "#Pnt" );
                  desc126.putUnitDouble( idLdng, idPnt, myFontSize );
                  var idTrck = charIDToTypeID( "Trck" );
                  desc126.putInteger( idTrck, 0 );
                  var idBsln = charIDToTypeID( "Bsln" );
                  var idPnt = charIDToTypeID( "#Pnt" );
                  desc126.putUnitDouble( idBsln, idPnt, 0.000000 );
                  var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                  desc126.putDouble( idcharacterRotation, 0.000000 );
                  var idAtKr = charIDToTypeID( "AtKr" );
                  var idAtKr = charIDToTypeID( "AtKr" );
                  var idmetricsKern = stringIDToTypeID( "metricsKern" );
                  desc126.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                  var idfontCaps = stringIDToTypeID( "fontCaps" );
                  var idfontCaps = stringIDToTypeID( "fontCaps" );
                  var idNrml = charIDToTypeID( "Nrml" );
                  desc126.putEnumerated( idfontCaps, idfontCaps, idNrml );
                  var idbaseline = stringIDToTypeID( "baseline" );
                  var idbaseline = stringIDToTypeID( "baseline" );
                  var idNrml = charIDToTypeID( "Nrml" );
                  desc126.putEnumerated( idbaseline, idbaseline, idNrml );
                  var idotbaseline = stringIDToTypeID( "otbaseline" );
                  var idotbaseline = stringIDToTypeID( "otbaseline" );
                  var idNrml = charIDToTypeID( "Nrml" );
                  desc126.putEnumerated( idotbaseline, idotbaseline, idNrml );
                  var idstrikethrough = stringIDToTypeID( "strikethrough" );
                  var idstrikethrough = stringIDToTypeID( "strikethrough" );
                  var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                  desc126.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                  var idUndl = charIDToTypeID( "Undl" );
                  var idUndl = charIDToTypeID( "Undl" );
                  var idunderlineOff = stringIDToTypeID( "underlineOff" );
                  desc126.putEnumerated( idUndl, idUndl, idunderlineOff );
                  var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                  var idPnt = charIDToTypeID( "#Pnt" );
                  desc126.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                  var idligature = stringIDToTypeID( "ligature" );
                  desc126.putBoolean( idligature, true );
                  var idaltligature = stringIDToTypeID( "altligature" );
                  desc126.putBoolean( idaltligature, false );
                  var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                  desc126.putBoolean( idcontextualLigatures, true );
                  var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                  desc126.putBoolean( idalternateLigatures, false );
                  var idoldStyle = stringIDToTypeID( "oldStyle" );
                  desc126.putBoolean( idoldStyle, false );
                  var idfractions = stringIDToTypeID( "fractions" );
                  desc126.putBoolean( idfractions, false );
                  var idordinals = stringIDToTypeID( "ordinals" );
                  desc126.putBoolean( idordinals, false );
                  var idswash = stringIDToTypeID( "swash" );
                  desc126.putBoolean( idswash, false );
                  var idtitling = stringIDToTypeID( "titling" );
                  desc126.putBoolean( idtitling, false );
                  var idconnectionForms = stringIDToTypeID( "connectionForms" );
                  desc126.putBoolean( idconnectionForms, true );
                  var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                  desc126.putBoolean( idstylisticAlternates, false );
                  var idornaments = stringIDToTypeID( "ornaments" );
                  desc126.putBoolean( idornaments, false );
                  var idfigureStyle = stringIDToTypeID( "figureStyle" );
                  var idfigureStyle = stringIDToTypeID( "figureStyle" );
                  var idNrml = charIDToTypeID( "Nrml" );
                  desc126.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                  var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                  desc126.putBoolean( idproportionalMetrics, false );
                  var idkana = stringIDToTypeID( "kana" );
                  desc126.putBoolean( idkana, false );
                  var iditalics = stringIDToTypeID( "italics" );
                  desc126.putBoolean( iditalics, false );
                  var idruby = stringIDToTypeID( "ruby" );
                  desc126.putBoolean( idruby, false );
                  var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                  var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                  var idwithStream = stringIDToTypeID( "withStream" );
                  desc126.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                  var idtextLanguage = stringIDToTypeID( "textLanguage" );
                  var idtextLanguage = stringIDToTypeID( "textLanguage" );
                  var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                  desc126.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                  var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                  var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                  var iddefaultForm = stringIDToTypeID( "defaultForm" );
                  desc126.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                  var idmojiZume = stringIDToTypeID( "mojiZume" );
                  desc126.putDouble( idmojiZume, 0.000000 );
                  var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                  var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                  var idroman = stringIDToTypeID( "roman" );
                  desc126.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                  var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                  desc126.putBoolean( idenableWariChu, false );
                  var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                  desc126.putInteger( idwariChuCount, 2 );
                  var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                  desc126.putInteger( idwariChuLineGap, 0 );
                  var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                  desc126.putDouble( idwariChuScale, 0.500000 );
                  var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                  desc126.putInteger( idwariChuWidow, 2 );
                  var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                  desc126.putInteger( idwariChuOrphan, 2 );
                  var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                  var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                  var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                  desc126.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                  var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                  desc126.putInteger( idtcyUpDown, 0 );
                  var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                  desc126.putInteger( idtcyLeftRight, 0 );
                  var idleftAki = stringIDToTypeID( "leftAki" );
                  desc126.putDouble( idleftAki, -1.000000 );
                  var idrightAki = stringIDToTypeID( "rightAki" );
                  desc126.putDouble( idrightAki, -1.000000 );
                  var idjiDori = stringIDToTypeID( "jiDori" );
                  desc126.putInteger( idjiDori, 0 );
                  var idnoBreak = stringIDToTypeID( "noBreak" );
                  desc126.putBoolean( idnoBreak, false );
                  var idClr = charIDToTypeID( "Clr " );
                      desc127 = new ActionDescriptor();
                      var idRd = charIDToTypeID( "Rd  " );
                      desc127.putDouble( idRd, textColour );
                      var idGrn = charIDToTypeID( "Grn " );
                      desc127.putDouble( idGrn, textColour );
                      var idBl = charIDToTypeID( "Bl  " );
                      desc127.putDouble( idBl, textColour );
                  var idRGBC = charIDToTypeID( "RGBC" );
                  desc126.putObject( idClr, idRGBC, desc127 );
                  var idstrokeColor = stringIDToTypeID( "strokeColor" );
                      desc128 = new ActionDescriptor();
                      var idRd = charIDToTypeID( "Rd  " );
                      desc128.putDouble( idRd, 0.000000 );
                      var idGrn = charIDToTypeID( "Grn " );
                      desc128.putDouble( idGrn, 0.000000 );
                      var idBl = charIDToTypeID( "Bl  " );
                      desc128.putDouble( idBl, 0.000000 );
                  var idRGBC = charIDToTypeID( "RGBC" );
                  desc126.putObject( idstrokeColor, idRGBC, desc128 );
                  var idFl = charIDToTypeID( "Fl  " );
                  desc126.putBoolean( idFl, true );
                  var idStrk = charIDToTypeID( "Strk" );
                  desc126.putBoolean( idStrk, false );
                  var idfillFirst = stringIDToTypeID( "fillFirst" );
                  desc126.putBoolean( idfillFirst, false );
                  var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                  desc126.putBoolean( idfillOverPrint, false );
                  var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                  desc126.putBoolean( idstrokeOverPrint, false );
                  var idlineCap = stringIDToTypeID( "lineCap" );
                  var idlineCap = stringIDToTypeID( "lineCap" );
                  var idbuttCap = stringIDToTypeID( "buttCap" );
                  desc126.putEnumerated( idlineCap, idlineCap, idbuttCap );
                  var idlineJoin = stringIDToTypeID( "lineJoin" );
                  var idlineJoin = stringIDToTypeID( "lineJoin" );
                  var idmiterJoin = stringIDToTypeID( "miterJoin" );
                  desc126.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                  var idlineWidth = stringIDToTypeID( "lineWidth" );
                  var idPnt = charIDToTypeID( "#Pnt" );
                  desc126.putUnitDouble( idlineWidth, idPnt, 0.009999 );
                  var idmiterLimit = stringIDToTypeID( "miterLimit" );
                  var idPnt = charIDToTypeID( "#Pnt" );
                  desc126.putUnitDouble( idmiterLimit, idPnt, 0.009999 );
                  var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                  desc126.putDouble( idlineDashoffset, 0.000000 );
              var idTxtS = charIDToTypeID( "TxtS" );
              desc125.putObject( idTxtS, idTxtS, desc126 );
              currentLayerReference = desc125;
            }
      }

      if(symbolIndices.length > 0){
        for(var i=0;i<symbolIndices.length;i++){

            var rgbValue = rgbC;
            // If white
            if(inputString.slice(symbolIndices[i]+1, symbolIndices[i]+2) == "w"){
              rgbValue = rgbW;
            }
            // else if blue
            else if(inputString.slice(symbolIndices[i]+1, symbolIndices[i]+2) == "u"){
              rgbValue = rgbU;
            }
            // else if black
            else if(inputString.slice(symbolIndices[i]+1, symbolIndices[i]+2) == "b"){
              rgbValue = rgbC;
            }
            // else if red
            else if(inputString.slice(symbolIndices[i]+1, symbolIndices[i]+2) == "r"){
              rgbValue = rgbR;
            }
            // else if green
            else if(inputString.slice(symbolIndices[i]+1, symbolIndices[i]+2) == "g"){
              rgbValue = rgbG;
            }

            var selectedFont = "NDPMTG";

            if( inputString.slice(symbolIndices[i], symbolIndices[i]+2) == "Qp" && phyrexianCard) rgbValue = phyrexianColour;

            else if ( inputString.slice(symbolIndices[i], symbolIndices[i]+1) == "e" ){
              // Energy symbol
              // =======================================================
              var idTxtt = charIDToTypeID( "Txtt" );
                  list12.putObject( idTxtt, currentLayerReference );
                      desc129 = new ActionDescriptor();
                      var idFrom = charIDToTypeID( "From" );
                      desc129.putInteger( idFrom, symbolIndices[i] );
                      var idT = charIDToTypeID( "T   " );
                      desc129.putInteger( idT, symbolIndices[i]+1 );
                      var idTxtS = charIDToTypeID( "TxtS" );
                          desc130 = new ActionDescriptor();
                          var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                          desc130.putBoolean( idstyleSheetHasParent, true );
                          var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                          desc130.putString( idfontPostScriptName, selectedFont );
                          var idFntN = charIDToTypeID( "FntN" );
                          desc130.putString( idFntN, selectedFont );
                          var idFntS = charIDToTypeID( "FntS" );
                          desc130.putString( idFntS, "Regular" );
                          var idScrp = charIDToTypeID( "Scrp" );
                          desc130.putInteger( idScrp, 0 );
                          var idFntT = charIDToTypeID( "FntT" );
                          desc130.putInteger( idFntT, 1 );
                          var idSz = charIDToTypeID( "Sz  " );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idSz, idPnt, myFontSize );
                          var idHrzS = charIDToTypeID( "HrzS" );
                          desc130.putDouble( idHrzS, 100.000000 );
                          var idVrtS = charIDToTypeID( "VrtS" );
                          desc130.putDouble( idVrtS, 100.000000 );
                          var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                          desc130.putBoolean( idsyntheticBold, false );
                          var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                          desc130.putBoolean( idsyntheticItalic, false );
                          var idautoLeading = stringIDToTypeID( "autoLeading" );
                          desc130.putBoolean( idautoLeading, false );
                          var idTrck = charIDToTypeID( "Trck" );
                          desc130.putInteger( idTrck, 0 );
                          var idBsln = charIDToTypeID( "Bsln" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idBsln, idPnt, 0.000000 );
                          var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                          desc130.putDouble( idcharacterRotation, 0.000000 );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idmetricsKern = stringIDToTypeID( "metricsKern" );
                          desc130.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idfontCaps, idfontCaps, idNrml );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idbaseline, idbaseline, idNrml );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idotbaseline, idotbaseline, idNrml );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                          desc130.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idunderlineOff = stringIDToTypeID( "underlineOff" );
                          desc130.putEnumerated( idUndl, idUndl, idunderlineOff );
                          var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                          var idligature = stringIDToTypeID( "ligature" );
                          desc130.putBoolean( idligature, true );
                          var idaltligature = stringIDToTypeID( "altligature" );
                          desc130.putBoolean( idaltligature, false );
                          var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                          desc130.putBoolean( idcontextualLigatures, true );
                          var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                          desc130.putBoolean( idalternateLigatures, false );
                          var idoldStyle = stringIDToTypeID( "oldStyle" );
                          desc130.putBoolean( idoldStyle, false );
                          var idfractions = stringIDToTypeID( "fractions" );
                          desc130.putBoolean( idfractions, false );
                          var idordinals = stringIDToTypeID( "ordinals" );
                          desc130.putBoolean( idordinals, false );
                          var idswash = stringIDToTypeID( "swash" );
                          desc130.putBoolean( idswash, false );
                          var idtitling = stringIDToTypeID( "titling" );
                          desc130.putBoolean( idtitling, false );
                          var idconnectionForms = stringIDToTypeID( "connectionForms" );
                          desc130.putBoolean( idconnectionForms, true );
                          var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                          desc130.putBoolean( idstylisticAlternates, false );
                          var idornaments = stringIDToTypeID( "ornaments" );
                          desc130.putBoolean( idornaments, false );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                          var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                          desc130.putBoolean( idproportionalMetrics, false );
                          var idkana = stringIDToTypeID( "kana" );
                          desc130.putBoolean( idkana, false );
                          var iditalics = stringIDToTypeID( "italics" );
                          desc130.putBoolean( iditalics, false );
                          var idruby = stringIDToTypeID( "ruby" );
                          desc130.putBoolean( idruby, false );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idwithStream = stringIDToTypeID( "withStream" );
                          desc130.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                          desc130.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                          var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                          var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                          var iddefaultForm = stringIDToTypeID( "defaultForm" );
                          desc130.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                          var idmojiZume = stringIDToTypeID( "mojiZume" );
                          desc130.putDouble( idmojiZume, 0.000000 );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idroman = stringIDToTypeID( "roman" );
                          desc130.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                          var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                          desc130.putBoolean( idenableWariChu, false );
                          var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                          desc130.putInteger( idwariChuCount, 2 );
                          var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                          desc130.putInteger( idwariChuLineGap, 0 );
                          var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                          desc130.putDouble( idwariChuScale, 0.500000 );
                          var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                          desc130.putInteger( idwariChuWidow, 2 );
                          var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                          desc130.putInteger( idwariChuOrphan, 2 );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                          desc130.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                          var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                          desc130.putInteger( idtcyUpDown, 0 );
                          var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                          desc130.putInteger( idtcyLeftRight, 0 );
                          var idleftAki = stringIDToTypeID( "leftAki" );
                          desc130.putDouble( idleftAki, -1.000000 );
                          var idrightAki = stringIDToTypeID( "rightAki" );
                          desc130.putDouble( idrightAki, -1.000000 );
                          var idjiDori = stringIDToTypeID( "jiDori" );
                          desc130.putInteger( idjiDori, 0 );
                          var idnoBreak = stringIDToTypeID( "noBreak" );
                          desc130.putBoolean( idnoBreak, false );
                          var idClr = charIDToTypeID( "Clr " );
                              desc131 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc131.putDouble( idRd, 0 );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc131.putDouble( idGrn, 0 );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc131.putDouble( idBl, 0 );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc130.putObject( idClr, idRGBC, desc131 );
                          var idstrokeColor = stringIDToTypeID( "strokeColor" );
                              desc132 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc132.putDouble( idRd, 0.000000 );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc132.putDouble( idGrn, 0.000000 );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc132.putDouble( idBl, 0.000000 );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc130.putObject( idstrokeColor, idRGBC, desc132 );
                          var idFl = charIDToTypeID( "Fl  " );
                          desc130.putBoolean( idFl, true );
                          var idStrk = charIDToTypeID( "Strk" );
                          desc130.putBoolean( idStrk, false );
                          var idfillFirst = stringIDToTypeID( "fillFirst" );
                          desc130.putBoolean( idfillFirst, false );
                          var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                          desc130.putBoolean( idfillOverPrint, false );
                          var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                          desc130.putBoolean( idstrokeOverPrint, false );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idbuttCap = stringIDToTypeID( "buttCap" );
                          desc130.putEnumerated( idlineCap, idlineCap, idbuttCap );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idmiterJoin = stringIDToTypeID( "miterJoin" );
                          desc130.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                          var idlineWidth = stringIDToTypeID( "lineWidth" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idlineWidth, idPnt, 0.009999 );
                          var idmiterLimit = stringIDToTypeID( "miterLimit" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idmiterLimit, idPnt, 0.009999 );
                          var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                          desc130.putDouble( idlineDashoffset, 0.000000 );
                      var idTxtS = charIDToTypeID( "TxtS" );
                      desc129.putObject( idTxtS, idTxtS, desc130 );
                      currentLayerReference = desc129;
            }

            else if( inputString.slice(symbolIndices[i]+1, symbolIndices[i]+2) == "q" ){
              // Hybrid mana
              // Symbol 1
              var rgbValue1 = rgbC;
              if(inputString.slice(symbolIndices[i]+2, symbolIndices[i]+3) == "L"){
                rgbValue1 = rgbW;
              }
              else if(inputString.slice(symbolIndices[i]+2, symbolIndices[i]+3) == "M"){
                rgbValue1 = rgbU;
              }
              else if(inputString.slice(symbolIndices[i]+2, symbolIndices[i]+3) == "N"){
                rgbValue1 = rgbC;
              }
              else if(inputString.slice(symbolIndices[i]+2, symbolIndices[i]+3) == "O"){
                rgbValue1 = rgbR;
              }
              else if(inputString.slice(symbolIndices[i]+2, symbolIndices[i]+3) == "P"){
                rgbValue1 = rgbG;
              }

              // Symbol 2
              var rgbValue2 = rgbC;
              if(inputString.slice(symbolIndices[i]+3, symbolIndices[i]+4) == "R"){
                rgbValue2 = rgbW;
              }
              else if(inputString.slice(symbolIndices[i]+3, symbolIndices[i]+4) == "S"){
                rgbValue2 = rgbU;
              }
              else if(inputString.slice(symbolIndices[i]+3, symbolIndices[i]+4) == "T"){
                rgbValue2 = rgbC;
              }
              else if(inputString.slice(symbolIndices[i]+3, symbolIndices[i]+4) == "U"){
                rgbValue2 = rgbR;
              }
              else if(inputString.slice(symbolIndices[i]+3, symbolIndices[i]+4) == "V"){
                rgbValue2 = rgbG;
              }

              var idTxtt = charIDToTypeID( "Txtt" );
              list12.putObject( idTxtt, currentLayerReference ); // list12.putObject( idTxtt, currentLayerReference );
                  var desc712 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc712.putInteger( idFrom, symbolIndices[i] );
                  var idT = charIDToTypeID( "T   " );
                  desc712.putInteger( idT, symbolIndices[i]+1 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                      var desc713 = new ActionDescriptor();
                      var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                      desc713.putBoolean( idstyleSheetHasParent, true );
                      var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                      desc713.putString( idfontPostScriptName, "NDPMTG" );
                      var idFntN = charIDToTypeID( "FntN" );
                      desc713.putString( idFntN, "NDPMTG" );
                      var idFntS = charIDToTypeID( "FntS" );
                      desc713.putString( idFntS, "Regular" );
                      var idScrp = charIDToTypeID( "Scrp" );
                      desc713.putInteger( idScrp, 0 );
                      var idFntT = charIDToTypeID( "FntT" );
                      desc713.putInteger( idFntT, 1 );
                      var idSz = charIDToTypeID( "Sz  " );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc713.putUnitDouble( idSz, idPnt, myFontSize ); /////////////////////
                      var idHrzS = charIDToTypeID( "HrzS" );
                      desc713.putDouble( idHrzS, 100.000000 );
                      var idVrtS = charIDToTypeID( "VrtS" );
                      desc713.putDouble( idVrtS, 100.000000 );
                      var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                      desc713.putBoolean( idsyntheticBold, false );
                      var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                      desc713.putBoolean( idsyntheticItalic, false );
                      var idautoLeading = stringIDToTypeID( "autoLeading" );
                      desc713.putBoolean( idautoLeading, true );
                      var idTrck = charIDToTypeID( "Trck" );
                      desc713.putInteger( idTrck, 0 );
                      var idBsln = charIDToTypeID( "Bsln" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc713.putUnitDouble( idBsln, idPnt, 0.000000 );
                      var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                      desc713.putDouble( idcharacterRotation, 0.000000 );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idmetricsKern = stringIDToTypeID( "metricsKern" );
                      desc713.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc713.putEnumerated( idfontCaps, idfontCaps, idNrml );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc713.putEnumerated( idbaseline, idbaseline, idNrml );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc713.putEnumerated( idotbaseline, idotbaseline, idNrml );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                      desc713.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idunderlineOff = stringIDToTypeID( "underlineOff" );
                      desc713.putEnumerated( idUndl, idUndl, idunderlineOff );
                      var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc713.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                      var idligature = stringIDToTypeID( "ligature" );
                      desc713.putBoolean( idligature, true );
                      var idaltligature = stringIDToTypeID( "altligature" );
                      desc713.putBoolean( idaltligature, false );
                      var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                      desc713.putBoolean( idcontextualLigatures, true );
                      var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                      desc713.putBoolean( idalternateLigatures, false );
                      var idoldStyle = stringIDToTypeID( "oldStyle" );
                      desc713.putBoolean( idoldStyle, false );
                      var idfractions = stringIDToTypeID( "fractions" );
                      desc713.putBoolean( idfractions, false );
                      var idordinals = stringIDToTypeID( "ordinals" );
                      desc713.putBoolean( idordinals, false );
                      var idswash = stringIDToTypeID( "swash" );
                      desc713.putBoolean( idswash, false );
                      var idtitling = stringIDToTypeID( "titling" );
                      desc713.putBoolean( idtitling, false );
                      var idconnectionForms = stringIDToTypeID( "connectionForms" );
                      desc713.putBoolean( idconnectionForms, true );
                      var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                      desc713.putBoolean( idstylisticAlternates, false );
                      var idornaments = stringIDToTypeID( "ornaments" );
                      desc713.putBoolean( idornaments, false );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc713.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                      var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                      desc713.putBoolean( idproportionalMetrics, false );
                      var idkana = stringIDToTypeID( "kana" );
                      desc713.putBoolean( idkana, false );
                      var iditalics = stringIDToTypeID( "italics" );
                      desc713.putBoolean( iditalics, false );
                      var idruby = stringIDToTypeID( "ruby" );
                      desc713.putBoolean( idruby, false );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idwithStream = stringIDToTypeID( "withStream" );
                      desc713.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                      desc713.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var iddefaultForm = stringIDToTypeID( "defaultForm" );
                      desc713.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                      var idmojiZume = stringIDToTypeID( "mojiZume" );
                      desc713.putDouble( idmojiZume, 0.000000 );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idroman = stringIDToTypeID( "roman" );
                      desc713.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                      var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                      desc713.putBoolean( idenableWariChu, false );
                      var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                      desc713.putInteger( idwariChuCount, 2 );
                      var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                      desc713.putInteger( idwariChuLineGap, 0 );
                      var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                      desc713.putDouble( idwariChuScale, 0.500000 );
                      var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                      desc713.putInteger( idwariChuWidow, 2 );
                      var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                      desc713.putInteger( idwariChuOrphan, 2 );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                      desc713.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                      var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                      desc713.putInteger( idtcyUpDown, 0 );
                      var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                      desc713.putInteger( idtcyLeftRight, 0 );
                      var idleftAki = stringIDToTypeID( "leftAki" );
                      desc713.putDouble( idleftAki, -1.000000 );
                      var idrightAki = stringIDToTypeID( "rightAki" );
                      desc713.putDouble( idrightAki, -1.000000 );
                      var idjiDori = stringIDToTypeID( "jiDori" );
                      desc713.putInteger( idjiDori, 0 );
                      var idnoBreak = stringIDToTypeID( "noBreak" );
                      desc713.putBoolean( idnoBreak, false );
                      var idClr = charIDToTypeID( "Clr " );
                          var desc714 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc714.putDouble( idRd, rgbValue2[0] );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc714.putDouble( idGrn, rgbValue2[1] );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc714.putDouble( idBl, rgbValue2[2] );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc713.putObject( idClr, idRGBC, desc714 );
                      var idstrokeColor = stringIDToTypeID( "strokeColor" );
                          var desc715 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc715.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc715.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc715.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc713.putObject( idstrokeColor, idRGBC, desc715 );
                      var idFl = charIDToTypeID( "Fl  " );
                      desc713.putBoolean( idFl, true );
                      var idStrk = charIDToTypeID( "Strk" );
                      desc713.putBoolean( idStrk, false );
                      var idfillFirst = stringIDToTypeID( "fillFirst" );
                      desc713.putBoolean( idfillFirst, false );
                      var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                      desc713.putBoolean( idfillOverPrint, false );
                      var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                      desc713.putBoolean( idstrokeOverPrint, false );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idbuttCap = stringIDToTypeID( "buttCap" );
                      desc713.putEnumerated( idlineCap, idlineCap, idbuttCap );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idmiterJoin = stringIDToTypeID( "miterJoin" );
                      desc713.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                      var idlineWidth = stringIDToTypeID( "lineWidth" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc713.putUnitDouble( idlineWidth, idPnt, 0.005000 );
                      var idmiterLimit = stringIDToTypeID( "miterLimit" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc713.putUnitDouble( idmiterLimit, idPnt, 0.005000 );
                      var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                      desc713.putDouble( idlineDashoffset, 0.000000 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                  desc712.putObject( idTxtS, idTxtS, desc713 );

              var idTxtt = charIDToTypeID( "Txtt" );
              list12.putObject( idTxtt, desc712 );
                  var desc716 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc716.putInteger( idFrom, symbolIndices[i]+1 );
                  var idT = charIDToTypeID( "T   " );
                  desc716.putInteger( idT, symbolIndices[i]+2 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                      var desc717 = new ActionDescriptor();
                      var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                      desc717.putBoolean( idstyleSheetHasParent, true );
                      var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                      desc717.putString( idfontPostScriptName, "NDPMTG" );
                      var idFntN = charIDToTypeID( "FntN" );
                      desc717.putString( idFntN, "NDPMTG" );
                      var idFntS = charIDToTypeID( "FntS" );
                      desc717.putString( idFntS, "Regular" );
                      var idScrp = charIDToTypeID( "Scrp" );
                      desc717.putInteger( idScrp, 0 );
                      var idFntT = charIDToTypeID( "FntT" );
                      desc717.putInteger( idFntT, 1 );
                      var idSz = charIDToTypeID( "Sz  " );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc717.putUnitDouble( idSz, idPnt, myFontSize );
                      var idHrzS = charIDToTypeID( "HrzS" );
                      desc717.putDouble( idHrzS, 100.000000 );
                      var idVrtS = charIDToTypeID( "VrtS" );
                      desc717.putDouble( idVrtS, 100.000000 );
                      var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                      desc717.putBoolean( idsyntheticBold, false );
                      var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                      desc717.putBoolean( idsyntheticItalic, false );
                      var idautoLeading = stringIDToTypeID( "autoLeading" );
                      desc717.putBoolean( idautoLeading, true );
                      var idTrck = charIDToTypeID( "Trck" );
                      desc717.putInteger( idTrck, 0 );
                      var idBsln = charIDToTypeID( "Bsln" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc717.putUnitDouble( idBsln, idPnt, 0.000000 );
                      var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                      desc717.putDouble( idcharacterRotation, 0.000000 );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idmetricsKern = stringIDToTypeID( "metricsKern" );
                      desc717.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc717.putEnumerated( idfontCaps, idfontCaps, idNrml );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc717.putEnumerated( idbaseline, idbaseline, idNrml );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc717.putEnumerated( idotbaseline, idotbaseline, idNrml );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                      desc717.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idunderlineOff = stringIDToTypeID( "underlineOff" );
                      desc717.putEnumerated( idUndl, idUndl, idunderlineOff );
                      var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc717.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                      var idligature = stringIDToTypeID( "ligature" );
                      desc717.putBoolean( idligature, true );
                      var idaltligature = stringIDToTypeID( "altligature" );
                      desc717.putBoolean( idaltligature, false );
                      var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                      desc717.putBoolean( idcontextualLigatures, true );
                      var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                      desc717.putBoolean( idalternateLigatures, false );
                      var idoldStyle = stringIDToTypeID( "oldStyle" );
                      desc717.putBoolean( idoldStyle, false );
                      var idfractions = stringIDToTypeID( "fractions" );
                      desc717.putBoolean( idfractions, false );
                      var idordinals = stringIDToTypeID( "ordinals" );
                      desc717.putBoolean( idordinals, false );
                      var idswash = stringIDToTypeID( "swash" );
                      desc717.putBoolean( idswash, false );
                      var idtitling = stringIDToTypeID( "titling" );
                      desc717.putBoolean( idtitling, false );
                      var idconnectionForms = stringIDToTypeID( "connectionForms" );
                      desc717.putBoolean( idconnectionForms, true );
                      var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                      desc717.putBoolean( idstylisticAlternates, false );
                      var idornaments = stringIDToTypeID( "ornaments" );
                      desc717.putBoolean( idornaments, false );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc717.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                      var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                      desc717.putBoolean( idproportionalMetrics, false );
                      var idkana = stringIDToTypeID( "kana" );
                      desc717.putBoolean( idkana, false );
                      var iditalics = stringIDToTypeID( "italics" );
                      desc717.putBoolean( iditalics, false );
                      var idruby = stringIDToTypeID( "ruby" );
                      desc717.putBoolean( idruby, false );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idwithStream = stringIDToTypeID( "withStream" );
                      desc717.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                      desc717.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var iddefaultForm = stringIDToTypeID( "defaultForm" );
                      desc717.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                      var idmojiZume = stringIDToTypeID( "mojiZume" );
                      desc717.putDouble( idmojiZume, 0.000000 );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idroman = stringIDToTypeID( "roman" );
                      desc717.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                      var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                      desc717.putBoolean( idenableWariChu, false );
                      var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                      desc717.putInteger( idwariChuCount, 2 );
                      var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                      desc717.putInteger( idwariChuLineGap, 0 );
                      var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                      desc717.putDouble( idwariChuScale, 0.500000 );
                      var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                      desc717.putInteger( idwariChuWidow, 2 );
                      var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                      desc717.putInteger( idwariChuOrphan, 2 );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                      desc717.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                      var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                      desc717.putInteger( idtcyUpDown, 0 );
                      var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                      desc717.putInteger( idtcyLeftRight, 0 );
                      var idleftAki = stringIDToTypeID( "leftAki" );
                      desc717.putDouble( idleftAki, -1.000000 );
                      var idrightAki = stringIDToTypeID( "rightAki" );
                      desc717.putDouble( idrightAki, -1.000000 );
                      var idjiDori = stringIDToTypeID( "jiDori" );
                      desc717.putInteger( idjiDori, 0 );
                      var idnoBreak = stringIDToTypeID( "noBreak" );
                      desc717.putBoolean( idnoBreak, false );
                      var idClr = charIDToTypeID( "Clr " );
                          var desc718 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc718.putDouble( idRd, rgbValue1[0] );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc718.putDouble( idGrn, rgbValue1[1] );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc718.putDouble( idBl, rgbValue1[2] );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc717.putObject( idClr, idRGBC, desc718 );
                      var idstrokeColor = stringIDToTypeID( "strokeColor" );
                          var desc719 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc719.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc719.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc719.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc717.putObject( idstrokeColor, idRGBC, desc719 );
                      var idFl = charIDToTypeID( "Fl  " );
                      desc717.putBoolean( idFl, true );
                      var idStrk = charIDToTypeID( "Strk" );
                      desc717.putBoolean( idStrk, false );
                      var idfillFirst = stringIDToTypeID( "fillFirst" );
                      desc717.putBoolean( idfillFirst, false );
                      var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                      desc717.putBoolean( idfillOverPrint, false );
                      var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                      desc717.putBoolean( idstrokeOverPrint, false );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idbuttCap = stringIDToTypeID( "buttCap" );
                      desc717.putEnumerated( idlineCap, idlineCap, idbuttCap );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idmiterJoin = stringIDToTypeID( "miterJoin" );
                      desc717.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                      var idlineWidth = stringIDToTypeID( "lineWidth" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc717.putUnitDouble( idlineWidth, idPnt, 0.005000 );
                      var idmiterLimit = stringIDToTypeID( "miterLimit" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc717.putUnitDouble( idmiterLimit, idPnt, 0.005000 );
                      var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                      desc717.putDouble( idlineDashoffset, 0.000000 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                  desc716.putObject( idTxtS, idTxtS, desc717 );

              var idTxtt = charIDToTypeID( "Txtt" );
              list12.putObject( idTxtt, desc716 );
                  var desc720 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc720.putInteger( idFrom, symbolIndices[i]+2 );
                  var idT = charIDToTypeID( "T   " );
                  desc720.putInteger( idT, symbolIndices[i]+3 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                      var desc721 = new ActionDescriptor();
                      var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                      desc721.putBoolean( idstyleSheetHasParent, true );
                      var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                      desc721.putString( idfontPostScriptName, "NDPMTG" );
                      var idFntN = charIDToTypeID( "FntN" );
                      desc721.putString( idFntN, "NDPMTG" );
                      var idFntS = charIDToTypeID( "FntS" );
                      desc721.putString( idFntS, "Regular" );
                      var idScrp = charIDToTypeID( "Scrp" );
                      desc721.putInteger( idScrp, 0 );
                      var idFntT = charIDToTypeID( "FntT" );
                      desc721.putInteger( idFntT, 1 );
                      var idSz = charIDToTypeID( "Sz  " );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc721.putUnitDouble( idSz, idPnt, myFontSize );
                      var idHrzS = charIDToTypeID( "HrzS" );
                      desc721.putDouble( idHrzS, 100.000000 );
                      var idVrtS = charIDToTypeID( "VrtS" );
                      desc721.putDouble( idVrtS, 100.000000 );
                      var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                      desc721.putBoolean( idsyntheticBold, false );
                      var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                      desc721.putBoolean( idsyntheticItalic, false );
                      var idautoLeading = stringIDToTypeID( "autoLeading" );
                      desc721.putBoolean( idautoLeading, true );
                      var idTrck = charIDToTypeID( "Trck" );
                      desc721.putInteger( idTrck, 0 );
                      var idBsln = charIDToTypeID( "Bsln" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc721.putUnitDouble( idBsln, idPnt, 0.000000 );
                      var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                      desc721.putDouble( idcharacterRotation, 0.000000 );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idmetricsKern = stringIDToTypeID( "metricsKern" );
                      desc721.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc721.putEnumerated( idfontCaps, idfontCaps, idNrml );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc721.putEnumerated( idbaseline, idbaseline, idNrml );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc721.putEnumerated( idotbaseline, idotbaseline, idNrml );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                      desc721.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idunderlineOff = stringIDToTypeID( "underlineOff" );
                      desc721.putEnumerated( idUndl, idUndl, idunderlineOff );
                      var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc721.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                      var idligature = stringIDToTypeID( "ligature" );
                      desc721.putBoolean( idligature, true );
                      var idaltligature = stringIDToTypeID( "altligature" );
                      desc721.putBoolean( idaltligature, false );
                      var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                      desc721.putBoolean( idcontextualLigatures, true );
                      var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                      desc721.putBoolean( idalternateLigatures, false );
                      var idoldStyle = stringIDToTypeID( "oldStyle" );
                      desc721.putBoolean( idoldStyle, false );
                      var idfractions = stringIDToTypeID( "fractions" );
                      desc721.putBoolean( idfractions, false );
                      var idordinals = stringIDToTypeID( "ordinals" );
                      desc721.putBoolean( idordinals, false );
                      var idswash = stringIDToTypeID( "swash" );
                      desc721.putBoolean( idswash, false );
                      var idtitling = stringIDToTypeID( "titling" );
                      desc721.putBoolean( idtitling, false );
                      var idconnectionForms = stringIDToTypeID( "connectionForms" );
                      desc721.putBoolean( idconnectionForms, true );
                      var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                      desc721.putBoolean( idstylisticAlternates, false );
                      var idornaments = stringIDToTypeID( "ornaments" );
                      desc721.putBoolean( idornaments, false );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc721.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                      var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                      desc721.putBoolean( idproportionalMetrics, false );
                      var idkana = stringIDToTypeID( "kana" );
                      desc721.putBoolean( idkana, false );
                      var iditalics = stringIDToTypeID( "italics" );
                      desc721.putBoolean( iditalics, false );
                      var idruby = stringIDToTypeID( "ruby" );
                      desc721.putBoolean( idruby, false );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idwithStream = stringIDToTypeID( "withStream" );
                      desc721.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                      desc721.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var iddefaultForm = stringIDToTypeID( "defaultForm" );
                      desc721.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                      var idmojiZume = stringIDToTypeID( "mojiZume" );
                      desc721.putDouble( idmojiZume, 0.000000 );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idroman = stringIDToTypeID( "roman" );
                      desc721.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                      var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                      desc721.putBoolean( idenableWariChu, false );
                      var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                      desc721.putInteger( idwariChuCount, 2 );
                      var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                      desc721.putInteger( idwariChuLineGap, 0 );
                      var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                      desc721.putDouble( idwariChuScale, 0.500000 );
                      var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                      desc721.putInteger( idwariChuWidow, 2 );
                      var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                      desc721.putInteger( idwariChuOrphan, 2 );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                      desc721.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                      var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                      desc721.putInteger( idtcyUpDown, 0 );
                      var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                      desc721.putInteger( idtcyLeftRight, 0 );
                      var idleftAki = stringIDToTypeID( "leftAki" );
                      desc721.putDouble( idleftAki, -1.000000 );
                      var idrightAki = stringIDToTypeID( "rightAki" );
                      desc721.putDouble( idrightAki, -1.000000 );
                      var idjiDori = stringIDToTypeID( "jiDori" );
                      desc721.putInteger( idjiDori, 0 );
                      var idnoBreak = stringIDToTypeID( "noBreak" );
                      desc721.putBoolean( idnoBreak, false );
                      var idClr = charIDToTypeID( "Clr " );
                          var desc722 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc722.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc722.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc722.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc721.putObject( idClr, idRGBC, desc722 );
                      var idstrokeColor = stringIDToTypeID( "strokeColor" );
                          var desc723 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc723.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc723.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc723.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc721.putObject( idstrokeColor, idRGBC, desc723 );
                      var idFl = charIDToTypeID( "Fl  " );
                      desc721.putBoolean( idFl, true );
                      var idStrk = charIDToTypeID( "Strk" );
                      desc721.putBoolean( idStrk, false );
                      var idfillFirst = stringIDToTypeID( "fillFirst" );
                      desc721.putBoolean( idfillFirst, false );
                      var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                      desc721.putBoolean( idfillOverPrint, false );
                      var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                      desc721.putBoolean( idstrokeOverPrint, false );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idbuttCap = stringIDToTypeID( "buttCap" );
                      desc721.putEnumerated( idlineCap, idlineCap, idbuttCap );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idmiterJoin = stringIDToTypeID( "miterJoin" );
                      desc721.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                      var idlineWidth = stringIDToTypeID( "lineWidth" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc721.putUnitDouble( idlineWidth, idPnt, 0.005000 );
                      var idmiterLimit = stringIDToTypeID( "miterLimit" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc721.putUnitDouble( idmiterLimit, idPnt, 0.005000 );
                      var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                      desc721.putDouble( idlineDashoffset, 0.000000 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                  desc720.putObject( idTxtS, idTxtS, desc721 );

              var idTxtt = charIDToTypeID( "Txtt" );
              list12.putObject( idTxtt, desc720 );
                  var desc724 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc724.putInteger( idFrom, symbolIndices[i]+3 );
                  var idT = charIDToTypeID( "T   " );
                  desc724.putInteger( idT, symbolIndices[i]+4 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                      var desc725 = new ActionDescriptor();
                      var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                      desc725.putBoolean( idstyleSheetHasParent, true );
                      var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                      desc725.putString( idfontPostScriptName, "NDPMTG" );
                      var idFntN = charIDToTypeID( "FntN" );
                      desc725.putString( idFntN, "NDPMTG" );
                      var idFntS = charIDToTypeID( "FntS" );
                      desc725.putString( idFntS, "Regular" );
                      var idScrp = charIDToTypeID( "Scrp" );
                      desc725.putInteger( idScrp, 0 );
                      var idFntT = charIDToTypeID( "FntT" );
                      desc725.putInteger( idFntT, 1 );
                      var idSz = charIDToTypeID( "Sz  " );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc725.putUnitDouble( idSz, idPnt, myFontSize );
                      var idHrzS = charIDToTypeID( "HrzS" );
                      desc725.putDouble( idHrzS, 100.000000 );
                      var idVrtS = charIDToTypeID( "VrtS" );
                      desc725.putDouble( idVrtS, 100.000000 );
                      var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                      desc725.putBoolean( idsyntheticBold, false );
                      var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                      desc725.putBoolean( idsyntheticItalic, false );
                      var idautoLeading = stringIDToTypeID( "autoLeading" );
                      desc725.putBoolean( idautoLeading, true );
                      var idTrck = charIDToTypeID( "Trck" );
                      desc725.putInteger( idTrck, 100 );
                      var idBsln = charIDToTypeID( "Bsln" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc725.putUnitDouble( idBsln, idPnt, 0.000000 );
                      var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                      desc725.putDouble( idcharacterRotation, 0.000000 );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idmetricsKern = stringIDToTypeID( "metricsKern" );
                      desc725.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc725.putEnumerated( idfontCaps, idfontCaps, idNrml );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc725.putEnumerated( idbaseline, idbaseline, idNrml );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc725.putEnumerated( idotbaseline, idotbaseline, idNrml );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                      desc725.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idunderlineOff = stringIDToTypeID( "underlineOff" );
                      desc725.putEnumerated( idUndl, idUndl, idunderlineOff );
                      var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc725.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                      var idligature = stringIDToTypeID( "ligature" );
                      desc725.putBoolean( idligature, true );
                      var idaltligature = stringIDToTypeID( "altligature" );
                      desc725.putBoolean( idaltligature, false );
                      var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                      desc725.putBoolean( idcontextualLigatures, true );
                      var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                      desc725.putBoolean( idalternateLigatures, false );
                      var idoldStyle = stringIDToTypeID( "oldStyle" );
                      desc725.putBoolean( idoldStyle, false );
                      var idfractions = stringIDToTypeID( "fractions" );
                      desc725.putBoolean( idfractions, false );
                      var idordinals = stringIDToTypeID( "ordinals" );
                      desc725.putBoolean( idordinals, false );
                      var idswash = stringIDToTypeID( "swash" );
                      desc725.putBoolean( idswash, false );
                      var idtitling = stringIDToTypeID( "titling" );
                      desc725.putBoolean( idtitling, false );
                      var idconnectionForms = stringIDToTypeID( "connectionForms" );
                      desc725.putBoolean( idconnectionForms, true );
                      var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                      desc725.putBoolean( idstylisticAlternates, false );
                      var idornaments = stringIDToTypeID( "ornaments" );
                      desc725.putBoolean( idornaments, false );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc725.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                      var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                      desc725.putBoolean( idproportionalMetrics, false );
                      var idkana = stringIDToTypeID( "kana" );
                      desc725.putBoolean( idkana, false );
                      var iditalics = stringIDToTypeID( "italics" );
                      desc725.putBoolean( iditalics, false );
                      var idruby = stringIDToTypeID( "ruby" );
                      desc725.putBoolean( idruby, false );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idwithStream = stringIDToTypeID( "withStream" );
                      desc725.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                      desc725.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var iddefaultForm = stringIDToTypeID( "defaultForm" );
                      desc725.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                      var idmojiZume = stringIDToTypeID( "mojiZume" );
                      desc725.putDouble( idmojiZume, 0.000000 );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idroman = stringIDToTypeID( "roman" );
                      desc725.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                      var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                      desc725.putBoolean( idenableWariChu, false );
                      var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                      desc725.putInteger( idwariChuCount, 2 );
                      var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                      desc725.putInteger( idwariChuLineGap, 0 );
                      var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                      desc725.putDouble( idwariChuScale, 0.500000 );
                      var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                      desc725.putInteger( idwariChuWidow, 2 );
                      var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                      desc725.putInteger( idwariChuOrphan, 2 );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                      desc725.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                      var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                      desc725.putInteger( idtcyUpDown, 0 );
                      var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                      desc725.putInteger( idtcyLeftRight, 0 );
                      var idleftAki = stringIDToTypeID( "leftAki" );
                      desc725.putDouble( idleftAki, -1.000000 );
                      var idrightAki = stringIDToTypeID( "rightAki" );
                      desc725.putDouble( idrightAki, -1.000000 );
                      var idjiDori = stringIDToTypeID( "jiDori" );
                      desc725.putInteger( idjiDori, 0 );
                      var idnoBreak = stringIDToTypeID( "noBreak" );
                      desc725.putBoolean( idnoBreak, false );
                      var idClr = charIDToTypeID( "Clr " );
                          var desc726 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc726.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc726.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc726.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc725.putObject( idClr, idRGBC, desc726 );
                      var idstrokeColor = stringIDToTypeID( "strokeColor" );
                          var desc727 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc727.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc727.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc727.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc725.putObject( idstrokeColor, idRGBC, desc727 );
                      var idFl = charIDToTypeID( "Fl  " );
                      desc725.putBoolean( idFl, true );
                      var idStrk = charIDToTypeID( "Strk" );
                      desc725.putBoolean( idStrk, false );
                      var idfillFirst = stringIDToTypeID( "fillFirst" );
                      desc725.putBoolean( idfillFirst, false );
                      var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                      desc725.putBoolean( idfillOverPrint, false );
                      var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                      desc725.putBoolean( idstrokeOverPrint, false );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idbuttCap = stringIDToTypeID( "buttCap" );
                      desc725.putEnumerated( idlineCap, idlineCap, idbuttCap );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idmiterJoin = stringIDToTypeID( "miterJoin" );
                      desc725.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                      var idlineWidth = stringIDToTypeID( "lineWidth" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc725.putUnitDouble( idlineWidth, idPnt, 0.005000 );
                      var idmiterLimit = stringIDToTypeID( "miterLimit" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc725.putUnitDouble( idmiterLimit, idPnt, 0.005000 );
                      var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                      desc725.putDouble( idlineDashoffset, 0.000000 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                  desc724.putObject( idTxtS, idTxtS, desc725 );
              var idTxtt = charIDToTypeID( "Txtt" );
              list12.putObject( idTxtt, desc724 );
          desc724.putList( idTxtt, list12 );
          currentLayerReference = desc724;

            }

            else{
              // =======================================================
              var idTxtt = charIDToTypeID( "Txtt" );
                  list12.putObject( idTxtt, currentLayerReference );
                      desc129 = new ActionDescriptor();
                      var idFrom = charIDToTypeID( "From" );
                      desc129.putInteger( idFrom, symbolIndices[i] );
                      var idT = charIDToTypeID( "T   " );
                      desc129.putInteger( idT, symbolIndices[i]+1 );
                      var idTxtS = charIDToTypeID( "TxtS" );
                          desc130 = new ActionDescriptor();
                          var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                          desc130.putBoolean( idstyleSheetHasParent, true );
                          var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                          desc130.putString( idfontPostScriptName, selectedFont );
                          var idFntN = charIDToTypeID( "FntN" );
                          desc130.putString( idFntN, selectedFont );
                          var idFntS = charIDToTypeID( "FntS" );
                          desc130.putString( idFntS, "Regular" );
                          var idScrp = charIDToTypeID( "Scrp" );
                          desc130.putInteger( idScrp, 0 );
                          var idFntT = charIDToTypeID( "FntT" );
                          desc130.putInteger( idFntT, 1 );
                          var idSz = charIDToTypeID( "Sz  " );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idSz, idPnt, myFontSize );
                          var idHrzS = charIDToTypeID( "HrzS" );
                          desc130.putDouble( idHrzS, 100.000000 );
                          var idVrtS = charIDToTypeID( "VrtS" );
                          desc130.putDouble( idVrtS, 100.000000 );
                          var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                          desc130.putBoolean( idsyntheticBold, false );
                          var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                          desc130.putBoolean( idsyntheticItalic, false );
                          var idautoLeading = stringIDToTypeID( "autoLeading" );
                          desc130.putBoolean( idautoLeading, false );
                          var idTrck = charIDToTypeID( "Trck" );
                          desc130.putInteger( idTrck, 0 );
                          var idBsln = charIDToTypeID( "Bsln" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idBsln, idPnt, 0.000000 );
                          var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                          desc130.putDouble( idcharacterRotation, 0.000000 );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idmetricsKern = stringIDToTypeID( "metricsKern" );
                          desc130.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idfontCaps, idfontCaps, idNrml );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idbaseline, idbaseline, idNrml );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idotbaseline, idotbaseline, idNrml );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                          desc130.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idunderlineOff = stringIDToTypeID( "underlineOff" );
                          desc130.putEnumerated( idUndl, idUndl, idunderlineOff );
                          var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                          var idligature = stringIDToTypeID( "ligature" );
                          desc130.putBoolean( idligature, true );
                          var idaltligature = stringIDToTypeID( "altligature" );
                          desc130.putBoolean( idaltligature, false );
                          var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                          desc130.putBoolean( idcontextualLigatures, true );
                          var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                          desc130.putBoolean( idalternateLigatures, false );
                          var idoldStyle = stringIDToTypeID( "oldStyle" );
                          desc130.putBoolean( idoldStyle, false );
                          var idfractions = stringIDToTypeID( "fractions" );
                          desc130.putBoolean( idfractions, false );
                          var idordinals = stringIDToTypeID( "ordinals" );
                          desc130.putBoolean( idordinals, false );
                          var idswash = stringIDToTypeID( "swash" );
                          desc130.putBoolean( idswash, false );
                          var idtitling = stringIDToTypeID( "titling" );
                          desc130.putBoolean( idtitling, false );
                          var idconnectionForms = stringIDToTypeID( "connectionForms" );
                          desc130.putBoolean( idconnectionForms, true );
                          var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                          desc130.putBoolean( idstylisticAlternates, false );
                          var idornaments = stringIDToTypeID( "ornaments" );
                          desc130.putBoolean( idornaments, false );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc130.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                          var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                          desc130.putBoolean( idproportionalMetrics, false );
                          var idkana = stringIDToTypeID( "kana" );
                          desc130.putBoolean( idkana, false );
                          var iditalics = stringIDToTypeID( "italics" );
                          desc130.putBoolean( iditalics, false );
                          var idruby = stringIDToTypeID( "ruby" );
                          desc130.putBoolean( idruby, false );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idwithStream = stringIDToTypeID( "withStream" );
                          desc130.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                          desc130.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                          var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                          var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                          var iddefaultForm = stringIDToTypeID( "defaultForm" );
                          desc130.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                          var idmojiZume = stringIDToTypeID( "mojiZume" );
                          desc130.putDouble( idmojiZume, 0.000000 );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idroman = stringIDToTypeID( "roman" );
                          desc130.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                          var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                          desc130.putBoolean( idenableWariChu, false );
                          var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                          desc130.putInteger( idwariChuCount, 2 );
                          var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                          desc130.putInteger( idwariChuLineGap, 0 );
                          var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                          desc130.putDouble( idwariChuScale, 0.500000 );
                          var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                          desc130.putInteger( idwariChuWidow, 2 );
                          var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                          desc130.putInteger( idwariChuOrphan, 2 );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                          desc130.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                          var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                          desc130.putInteger( idtcyUpDown, 0 );
                          var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                          desc130.putInteger( idtcyLeftRight, 0 );
                          var idleftAki = stringIDToTypeID( "leftAki" );
                          desc130.putDouble( idleftAki, -1.000000 );
                          var idrightAki = stringIDToTypeID( "rightAki" );
                          desc130.putDouble( idrightAki, -1.000000 );
                          var idjiDori = stringIDToTypeID( "jiDori" );
                          desc130.putInteger( idjiDori, 0 );
                          var idnoBreak = stringIDToTypeID( "noBreak" );
                          desc130.putBoolean( idnoBreak, false );
                          var idClr = charIDToTypeID( "Clr " );
                              desc131 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc131.putDouble( idRd, rgbValue[0] );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc131.putDouble( idGrn, rgbValue[1] );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc131.putDouble( idBl, rgbValue[2] );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc130.putObject( idClr, idRGBC, desc131 );
                          var idstrokeColor = stringIDToTypeID( "strokeColor" );
                              desc132 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc132.putDouble( idRd, 0.000000 );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc132.putDouble( idGrn, 0.000000 );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc132.putDouble( idBl, 0.000000 );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc130.putObject( idstrokeColor, idRGBC, desc132 );
                          var idFl = charIDToTypeID( "Fl  " );
                          desc130.putBoolean( idFl, true );
                          var idStrk = charIDToTypeID( "Strk" );
                          desc130.putBoolean( idStrk, false );
                          var idfillFirst = stringIDToTypeID( "fillFirst" );
                          desc130.putBoolean( idfillFirst, false );
                          var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                          desc130.putBoolean( idfillOverPrint, false );
                          var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                          desc130.putBoolean( idstrokeOverPrint, false );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idbuttCap = stringIDToTypeID( "buttCap" );
                          desc130.putEnumerated( idlineCap, idlineCap, idbuttCap );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idmiterJoin = stringIDToTypeID( "miterJoin" );
                          desc130.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                          var idlineWidth = stringIDToTypeID( "lineWidth" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idlineWidth, idPnt, 0.009999 );
                          var idmiterLimit = stringIDToTypeID( "miterLimit" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc130.putUnitDouble( idmiterLimit, idPnt, 0.009999 );
                          var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                          desc130.putDouble( idlineDashoffset, 0.000000 );
                      var idTxtS = charIDToTypeID( "TxtS" );
                      desc129.putObject( idTxtS, idTxtS, desc130 );

              // =======================================================
              var idTxtt = charIDToTypeID( "Txtt" );
              list12.putObject( idTxtt, desc129 );
                  desc133 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc133.putInteger( idFrom, symbolIndices[i]+1 );
                  var idT = charIDToTypeID( "T   " );
                  desc133.putInteger( idT, symbolIndices[i]+2 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                      desc134 = new ActionDescriptor();
                      var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                      desc134.putBoolean( idstyleSheetHasParent, true );
                      var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                      desc134.putString( idfontPostScriptName, selectedFont );
                      var idFntN = charIDToTypeID( "FntN" );
                      desc134.putString( idFntN, selectedFont );
                      var idFntS = charIDToTypeID( "FntS" );
                      desc134.putString( idFntS, "Regular" );
                      var idScrp = charIDToTypeID( "Scrp" );
                      desc134.putInteger( idScrp, 0 );
                      var idFntT = charIDToTypeID( "FntT" );
                      desc134.putInteger( idFntT, 1 );
                      var idSz = charIDToTypeID( "Sz  " );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc134.putUnitDouble( idSz, idPnt, myFontSize );
                      var idHrzS = charIDToTypeID( "HrzS" );
                      desc134.putDouble( idHrzS, 100.000000 );
                      var idVrtS = charIDToTypeID( "VrtS" );
                      desc134.putDouble( idVrtS, 100.000000 );
                      var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                      desc134.putBoolean( idsyntheticBold, false );
                      var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                      desc134.putBoolean( idsyntheticItalic, false );
                      var idautoLeading = stringIDToTypeID( "autoLeading" );
                      desc134.putBoolean( idautoLeading, false );
                      var idTrck = charIDToTypeID( "Trck" );
                      desc134.putInteger( idTrck, 0 );
                      var idBsln = charIDToTypeID( "Bsln" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc134.putUnitDouble( idBsln, idPnt, 0.000000 );
                      var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                      desc134.putDouble( idcharacterRotation, 0.000000 );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idAtKr = charIDToTypeID( "AtKr" );
                      var idmetricsKern = stringIDToTypeID( "metricsKern" );
                      desc134.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idfontCaps = stringIDToTypeID( "fontCaps" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc134.putEnumerated( idfontCaps, idfontCaps, idNrml );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idbaseline = stringIDToTypeID( "baseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc134.putEnumerated( idbaseline, idbaseline, idNrml );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idotbaseline = stringIDToTypeID( "otbaseline" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc134.putEnumerated( idotbaseline, idotbaseline, idNrml );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethrough = stringIDToTypeID( "strikethrough" );
                      var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                      desc134.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idUndl = charIDToTypeID( "Undl" );
                      var idunderlineOff = stringIDToTypeID( "underlineOff" );
                      desc134.putEnumerated( idUndl, idUndl, idunderlineOff );
                      var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc134.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                      var idligature = stringIDToTypeID( "ligature" );
                      desc134.putBoolean( idligature, true );
                      var idaltligature = stringIDToTypeID( "altligature" );
                      desc134.putBoolean( idaltligature, false );
                      var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                      desc134.putBoolean( idcontextualLigatures, true );
                      var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                      desc134.putBoolean( idalternateLigatures, false );
                      var idoldStyle = stringIDToTypeID( "oldStyle" );
                      desc134.putBoolean( idoldStyle, false );
                      var idfractions = stringIDToTypeID( "fractions" );
                      desc134.putBoolean( idfractions, false );
                      var idordinals = stringIDToTypeID( "ordinals" );
                      desc134.putBoolean( idordinals, false );
                      var idswash = stringIDToTypeID( "swash" );
                      desc134.putBoolean( idswash, false );
                      var idtitling = stringIDToTypeID( "titling" );
                      desc134.putBoolean( idtitling, false );
                      var idconnectionForms = stringIDToTypeID( "connectionForms" );
                      desc134.putBoolean( idconnectionForms, true );
                      var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                      desc134.putBoolean( idstylisticAlternates, false );
                      var idornaments = stringIDToTypeID( "ornaments" );
                      desc134.putBoolean( idornaments, false );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idfigureStyle = stringIDToTypeID( "figureStyle" );
                      var idNrml = charIDToTypeID( "Nrml" );
                      desc134.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                      var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                      desc134.putBoolean( idproportionalMetrics, false );
                      var idkana = stringIDToTypeID( "kana" );
                      desc134.putBoolean( idkana, false );
                      var iditalics = stringIDToTypeID( "italics" );
                      desc134.putBoolean( iditalics, false );
                      var idruby = stringIDToTypeID( "ruby" );
                      desc134.putBoolean( idruby, false );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                      var idwithStream = stringIDToTypeID( "withStream" );
                      desc134.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idtextLanguage = stringIDToTypeID( "textLanguage" );
                      var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                      desc134.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                      var iddefaultForm = stringIDToTypeID( "defaultForm" );
                      desc134.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                      var idmojiZume = stringIDToTypeID( "mojiZume" );
                      desc134.putDouble( idmojiZume, 0.000000 );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                      var idroman = stringIDToTypeID( "roman" );
                      desc134.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                      var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                      desc134.putBoolean( idenableWariChu, false );
                      var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                      desc134.putInteger( idwariChuCount, 2 );
                      var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                      desc134.putInteger( idwariChuLineGap, 0 );
                      var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                      desc134.putDouble( idwariChuScale, 0.500000 );
                      var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                      desc134.putInteger( idwariChuWidow, 2 );
                      var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                      desc134.putInteger( idwariChuOrphan, 2 );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                      var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                      desc134.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                      var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                      desc134.putInteger( idtcyUpDown, 0 );
                      var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                      desc134.putInteger( idtcyLeftRight, 0 );
                      var idleftAki = stringIDToTypeID( "leftAki" );
                      desc134.putDouble( idleftAki, -1.000000 );
                      var idrightAki = stringIDToTypeID( "rightAki" );
                      desc134.putDouble( idrightAki, -1.000000 );
                      var idjiDori = stringIDToTypeID( "jiDori" );
                      desc134.putInteger( idjiDori, 0 );
                      var idnoBreak = stringIDToTypeID( "noBreak" );
                      desc134.putBoolean( idnoBreak, false );
                      var idClr = charIDToTypeID( "Clr " );
                          desc135 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc135.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc135.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc135.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc134.putObject( idClr, idRGBC, desc135 );
                      var idstrokeColor = stringIDToTypeID( "strokeColor" );
                          desc136 = new ActionDescriptor();
                          var idRd = charIDToTypeID( "Rd  " );
                          desc136.putDouble( idRd, 0.000000 );
                          var idGrn = charIDToTypeID( "Grn " );
                          desc136.putDouble( idGrn, 0.000000 );
                          var idBl = charIDToTypeID( "Bl  " );
                          desc136.putDouble( idBl, 0.000000 );
                      var idRGBC = charIDToTypeID( "RGBC" );
                      desc134.putObject( idstrokeColor, idRGBC, desc136 );
                      var idFl = charIDToTypeID( "Fl  " );
                      desc134.putBoolean( idFl, true );
                      var idStrk = charIDToTypeID( "Strk" );
                      desc134.putBoolean( idStrk, false );
                      var idfillFirst = stringIDToTypeID( "fillFirst" );
                      desc134.putBoolean( idfillFirst, false );
                      var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                      desc134.putBoolean( idfillOverPrint, false );
                      var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                      desc134.putBoolean( idstrokeOverPrint, false );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idlineCap = stringIDToTypeID( "lineCap" );
                      var idbuttCap = stringIDToTypeID( "buttCap" );
                      desc134.putEnumerated( idlineCap, idlineCap, idbuttCap );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idlineJoin = stringIDToTypeID( "lineJoin" );
                      var idmiterJoin = stringIDToTypeID( "miterJoin" );
                      desc134.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                      var idlineWidth = stringIDToTypeID( "lineWidth" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc134.putUnitDouble( idlineWidth, idPnt, 0.009999 );
                      var idmiterLimit = stringIDToTypeID( "miterLimit" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc134.putUnitDouble( idmiterLimit, idPnt, 0.009999 );
                      var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                      desc134.putDouble( idlineDashoffset, 0.000000 );
                  var idTxtS = charIDToTypeID( "TxtS" );
                  desc133.putObject( idTxtS, idTxtS, desc134 );
                  currentLayerReference = desc133;
            }

        }
      }



        var idTxtt = charIDToTypeID( "Txtt" );
        list12.putObject( idTxtt, currentLayerReference );
            var desc137 = new ActionDescriptor();
            var idFrom = charIDToTypeID( "From" );
            //desc137.putInteger( idFrom, symbolIndices[symbolIndices.length-1]+2 );
            desc137.putInteger( idFrom, inputString.length );
            var idT = charIDToTypeID( "T   " );
            desc137.putInteger( idT, inputString.length );
            var idTxtS = charIDToTypeID( "TxtS" );
                var desc138 = new ActionDescriptor();
                var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                desc138.putBoolean( idstyleSheetHasParent, true );
                var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                desc138.putString( idfontPostScriptName, "MPlantin" );
                var idFntN = charIDToTypeID( "FntN" );
                desc138.putString( idFntN, "MPlantin" );
                var idFntS = charIDToTypeID( "FntS" );
                desc138.putString( idFntS, "Regular" );
                var idScrp = charIDToTypeID( "Scrp" );
                desc138.putInteger( idScrp, 0 );
                var idFntT = charIDToTypeID( "FntT" );
                desc138.putInteger( idFntT, 1 );
                var idSz = charIDToTypeID( "Sz  " );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc138.putUnitDouble( idSz, idPnt, myFontSize );
                var idHrzS = charIDToTypeID( "HrzS" );
                desc138.putDouble( idHrzS, 100.000000 );
                var idVrtS = charIDToTypeID( "VrtS" );
                desc138.putDouble( idVrtS, 100.000000 );
                var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                desc138.putBoolean( idsyntheticBold, false );
                var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                desc138.putBoolean( idsyntheticItalic, false );
                var idautoLeading = stringIDToTypeID( "autoLeading" );
                desc138.putBoolean( idautoLeading, false );
                var idLdng = charIDToTypeID( "Ldng" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc138.putUnitDouble( idLdng, idPnt, myFontSize );
                var idTrck = charIDToTypeID( "Trck" );
                desc138.putInteger( idTrck, 0 );
                var idBsln = charIDToTypeID( "Bsln" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc138.putUnitDouble( idBsln, idPnt, 0.000000 );
                var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                desc138.putDouble( idcharacterRotation, 0.000000 );
                var idAtKr = charIDToTypeID( "AtKr" );
                var idAtKr = charIDToTypeID( "AtKr" );
                var idmetricsKern = stringIDToTypeID( "metricsKern" );
                desc138.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                var idfontCaps = stringIDToTypeID( "fontCaps" );
                var idfontCaps = stringIDToTypeID( "fontCaps" );
                var idNrml = charIDToTypeID( "Nrml" );
                desc138.putEnumerated( idfontCaps, idfontCaps, idNrml );
                var idbaseline = stringIDToTypeID( "baseline" );
                var idbaseline = stringIDToTypeID( "baseline" );
                var idNrml = charIDToTypeID( "Nrml" );
                desc138.putEnumerated( idbaseline, idbaseline, idNrml );
                var idotbaseline = stringIDToTypeID( "otbaseline" );
                var idotbaseline = stringIDToTypeID( "otbaseline" );
                var idNrml = charIDToTypeID( "Nrml" );
                desc138.putEnumerated( idotbaseline, idotbaseline, idNrml );
                var idstrikethrough = stringIDToTypeID( "strikethrough" );
                var idstrikethrough = stringIDToTypeID( "strikethrough" );
                var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                desc138.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                var idUndl = charIDToTypeID( "Undl" );
                var idUndl = charIDToTypeID( "Undl" );
                var idunderlineOff = stringIDToTypeID( "underlineOff" );
                desc138.putEnumerated( idUndl, idUndl, idunderlineOff );
                var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc138.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                var idligature = stringIDToTypeID( "ligature" );
                desc138.putBoolean( idligature, true );
                var idaltligature = stringIDToTypeID( "altligature" );
                desc138.putBoolean( idaltligature, false );
                var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                desc138.putBoolean( idcontextualLigatures, true );
                var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                desc138.putBoolean( idalternateLigatures, false );
                var idoldStyle = stringIDToTypeID( "oldStyle" );
                desc138.putBoolean( idoldStyle, false );
                var idfractions = stringIDToTypeID( "fractions" );
                desc138.putBoolean( idfractions, false );
                var idordinals = stringIDToTypeID( "ordinals" );
                desc138.putBoolean( idordinals, false );
                var idswash = stringIDToTypeID( "swash" );
                desc138.putBoolean( idswash, false );
                var idtitling = stringIDToTypeID( "titling" );
                desc138.putBoolean( idtitling, false );
                var idconnectionForms = stringIDToTypeID( "connectionForms" );
                desc138.putBoolean( idconnectionForms, true );
                var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                desc138.putBoolean( idstylisticAlternates, false );
                var idornaments = stringIDToTypeID( "ornaments" );
                desc138.putBoolean( idornaments, false );
                var idfigureStyle = stringIDToTypeID( "figureStyle" );
                var idfigureStyle = stringIDToTypeID( "figureStyle" );
                var idNrml = charIDToTypeID( "Nrml" );
                desc138.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                desc138.putBoolean( idproportionalMetrics, false );
                var idkana = stringIDToTypeID( "kana" );
                desc138.putBoolean( idkana, false );
                var iditalics = stringIDToTypeID( "italics" );
                desc138.putBoolean( iditalics, false );
                var idruby = stringIDToTypeID( "ruby" );
                desc138.putBoolean( idruby, false );
                var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                var idwithStream = stringIDToTypeID( "withStream" );
                desc138.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                var idtextLanguage = stringIDToTypeID( "textLanguage" );
                var idtextLanguage = stringIDToTypeID( "textLanguage" );
                var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                desc138.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                var iddefaultForm = stringIDToTypeID( "defaultForm" );
                desc138.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                var idmojiZume = stringIDToTypeID( "mojiZume" );
                desc138.putDouble( idmojiZume, 0.000000 );
                var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                var idroman = stringIDToTypeID( "roman" );
                desc138.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                desc138.putBoolean( idenableWariChu, false );
                var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                desc138.putInteger( idwariChuCount, 2 );
                var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                desc138.putInteger( idwariChuLineGap, 0 );
                var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                desc138.putDouble( idwariChuScale, 0.500000 );
                var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                desc138.putInteger( idwariChuWidow, 2 );
                var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                desc138.putInteger( idwariChuOrphan, 2 );
                var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                desc138.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                desc138.putInteger( idtcyUpDown, 0 );
                var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                desc138.putInteger( idtcyLeftRight, 0 );
                var idleftAki = stringIDToTypeID( "leftAki" );
                desc138.putDouble( idleftAki, -1.000000 );
                var idrightAki = stringIDToTypeID( "rightAki" );
                desc138.putDouble( idrightAki, -1.000000 );
                var idjiDori = stringIDToTypeID( "jiDori" );
                desc138.putInteger( idjiDori, 0 );
                var idnoBreak = stringIDToTypeID( "noBreak" );
                desc138.putBoolean( idnoBreak, false );
                var idClr = charIDToTypeID( "Clr " );
                    var desc139 = new ActionDescriptor();
                    var idRd = charIDToTypeID( "Rd  " );
                    desc139.putDouble( idRd, textColour );
                    var idGrn = charIDToTypeID( "Grn " );
                    desc139.putDouble( idGrn, textColour );
                    var idBl = charIDToTypeID( "Bl  " );
                    desc139.putDouble( idBl, textColour );
                var idRGBC = charIDToTypeID( "RGBC" );
                desc138.putObject( idClr, idRGBC, desc139 );
                var idstrokeColor = stringIDToTypeID( "strokeColor" );
                    var desc140 = new ActionDescriptor();
                    var idRd = charIDToTypeID( "Rd  " );
                    desc140.putDouble( idRd, 0.000000 );
                    var idGrn = charIDToTypeID( "Grn " );
                    desc140.putDouble( idGrn, 0.000000 );
                    var idBl = charIDToTypeID( "Bl  " );
                    desc140.putDouble( idBl, 0.000000 );
                var idRGBC = charIDToTypeID( "RGBC" );
                desc138.putObject( idstrokeColor, idRGBC, desc140 );
                var idFl = charIDToTypeID( "Fl  " );
                desc138.putBoolean( idFl, true );
                var idStrk = charIDToTypeID( "Strk" );
                desc138.putBoolean( idStrk, false );
                var idfillFirst = stringIDToTypeID( "fillFirst" );
                desc138.putBoolean( idfillFirst, false );
                var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                desc138.putBoolean( idfillOverPrint, false );
                var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                desc138.putBoolean( idstrokeOverPrint, false );
                var idlineCap = stringIDToTypeID( "lineCap" );
                var idlineCap = stringIDToTypeID( "lineCap" );
                var idbuttCap = stringIDToTypeID( "buttCap" );
                desc138.putEnumerated( idlineCap, idlineCap, idbuttCap );
                var idlineJoin = stringIDToTypeID( "lineJoin" );
                var idlineJoin = stringIDToTypeID( "lineJoin" );
                var idmiterJoin = stringIDToTypeID( "miterJoin" );
                desc138.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                var idlineWidth = stringIDToTypeID( "lineWidth" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc138.putUnitDouble( idlineWidth, idPnt, 0.009999 );
                var idmiterLimit = stringIDToTypeID( "miterLimit" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc138.putUnitDouble( idmiterLimit, idPnt, 0.009999 );
                var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                desc138.putDouble( idlineDashoffset, 0.000000 );
            var idTxtS = charIDToTypeID( "TxtS" );
            desc137.putObject( idTxtS, idTxtS, desc138 );
        var idTxtt = charIDToTypeID( "Txtt" );
        list12.putObject( idTxtt, desc137 );
        desc120.putList( idTxtt, list12 );

        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list13 = new ActionList();
                var desc141 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc141.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc141.putInteger( idT, inputString.length );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc142 = new ActionDescriptor();
                    var idAlgn = charIDToTypeID( "Algn" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idLeft = charIDToTypeID( "Left" );
                    desc142.putEnumerated( idAlgn, idAlg, idLeft );
                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc142.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                    var idstartIndent = stringIDToTypeID( "startIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc142.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                    var idendIndent = stringIDToTypeID( "endIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc142.putUnitDouble( idendIndent, idPnt, 0.000000 );
                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                    var idPnt = charIDToTypeID( "#Pnt" );

                    var spacingMan = 16.428175
                    if(centredText == true) spacingMan = 0;

                    desc142.putUnitDouble( idspaceBefore, idPnt, spacingMan ); ////////////////////////////////////
                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc142.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                    desc142.putInteger( iddropCapMultiplier, 1 );
                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                    desc142.putDouble( idautoLeadingPercentage, 1.200000 );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                    desc142.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc142.putBoolean( idhyphenate, false );
                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                    desc142.putInteger( idhyphenateWordSize, 6 );
                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                    desc142.putInteger( idhyphenatePreLength, 2 );
                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                    desc142.putInteger( idhyphenatePostLength, 2 );
                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                    desc142.putInteger( idhyphenateLimit, 0 );
                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                    desc142.putDouble( idhyphenationZone, 36.000000 );
                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                    desc142.putBoolean( idhyphenateCapitalized, true );
                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                    desc142.putDouble( idhyphenationPreference, 0.500000 );
                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                    desc142.putDouble( idjustificationWordMinimum, 0.800000 );
                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                    desc142.putDouble( idjustificationWordDesired, 1.000000 );
                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                    desc142.putDouble( idjustificationWordMaximum, 1.330000 );
                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                    desc142.putDouble( idjustificationLetterMinimum, 0.000000 );
                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                    desc142.putDouble( idjustificationLetterDesired, 0.000000 );
                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                    desc142.putDouble( idjustificationLetterMaximum, 0.000000 );
                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                    desc142.putDouble( idjustificationGlyphMinimum, 1.000000 );
                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                    desc142.putDouble( idjustificationGlyphDesired, 1.000000 );
                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                    desc142.putDouble( idjustificationGlyphMaximum, 1.000000 );
                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idJstA = charIDToTypeID( "JstA" );
                    desc142.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                    desc142.putBoolean( idhangingRoman, false );
                    var idautoTCY = stringIDToTypeID( "autoTCY" );
                    desc142.putInteger( idautoTCY, 1 );
                    var idkeepTogether = stringIDToTypeID( "keepTogether" );
                    desc142.putBoolean( idkeepTogether, false );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                    desc142.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpushIn = stringIDToTypeID( "pushIn" );
                    desc142.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                    desc142.putBoolean( idkurikaeshiMojiShori, false );
                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                    desc142.putBoolean( idtextEveryLineComposer, false );
                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                    desc142.putDouble( iddefaultTabWidth, 36.000000 );
                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                        var desc143 = new ActionDescriptor();
                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                        desc143.putString( idfontPostScriptName, "NDPMTG" );
                        var idFntN = charIDToTypeID( "FntN" );
                        desc143.putString( idFntN, "Magic Symbols 2008" );
                        var idFntS = charIDToTypeID( "FntS" );
                        desc143.putString( idFntS, "Regular" );
                        var idScrp = charIDToTypeID( "Scrp" );
                        desc143.putInteger( idScrp, 0 );
                        var idFntT = charIDToTypeID( "FntT" );
                        desc143.putInteger( idFntT, 1 );
                        var idSz = charIDToTypeID( "Sz  " );
                        var idPnt = charIDToTypeID( "#Pnt" );
                        desc143.putUnitDouble( idSz, idPnt, 11.998500 );
                        var idHrzS = charIDToTypeID( "HrzS" );
                        desc143.putDouble( idHrzS, 100.000000 );
                        var idVrtS = charIDToTypeID( "VrtS" );
                        desc143.putDouble( idVrtS, 100.000000 );
                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                        desc143.putBoolean( idsyntheticBold, false );
                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                        desc143.putBoolean( idsyntheticItalic, false );
                        var idautoLeading = stringIDToTypeID( "autoLeading" );
                        desc143.putBoolean( idautoLeading, false );
                        var idTrck = charIDToTypeID( "Trck" );
                        desc143.putInteger( idTrck, 0 );
                        var idBsln = charIDToTypeID( "Bsln" );
                        var idPnt = charIDToTypeID( "#Pnt" );
                        desc143.putUnitDouble( idBsln, idPnt, 0.000000 );
                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                        desc143.putDouble( idcharacterRotation, 0.000000 );
                        var idAtKr = charIDToTypeID( "AtKr" );
                        var idAtKr = charIDToTypeID( "AtKr" );
                        var idmetricsKern = stringIDToTypeID( "metricsKern" );
                        desc143.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                        var idfontCaps = stringIDToTypeID( "fontCaps" );
                        var idfontCaps = stringIDToTypeID( "fontCaps" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc143.putEnumerated( idfontCaps, idfontCaps, idNrml );
                        var idbaseline = stringIDToTypeID( "baseline" );
                        var idbaseline = stringIDToTypeID( "baseline" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc143.putEnumerated( idbaseline, idbaseline, idNrml );
                        var idotbaseline = stringIDToTypeID( "otbaseline" );
                        var idotbaseline = stringIDToTypeID( "otbaseline" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc143.putEnumerated( idotbaseline, idotbaseline, idNrml );
                        var idstrikethrough = stringIDToTypeID( "strikethrough" );
                        var idstrikethrough = stringIDToTypeID( "strikethrough" );
                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                        desc143.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                        var idUndl = charIDToTypeID( "Undl" );
                        var idUndl = charIDToTypeID( "Undl" );
                        var idunderlineOff = stringIDToTypeID( "underlineOff" );
                        desc143.putEnumerated( idUndl, idUndl, idunderlineOff );
                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                        var idPnt = charIDToTypeID( "#Pnt" );
                        desc143.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                        var idligature = stringIDToTypeID( "ligature" );
                        desc143.putBoolean( idligature, true );
                        var idaltligature = stringIDToTypeID( "altligature" );
                        desc143.putBoolean( idaltligature, false );
                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                        desc143.putBoolean( idcontextualLigatures, false );
                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                        desc143.putBoolean( idalternateLigatures, false );
                        var idoldStyle = stringIDToTypeID( "oldStyle" );
                        desc143.putBoolean( idoldStyle, false );
                        var idfractions = stringIDToTypeID( "fractions" );
                        desc143.putBoolean( idfractions, false );
                        var idordinals = stringIDToTypeID( "ordinals" );
                        desc143.putBoolean( idordinals, false );
                        var idswash = stringIDToTypeID( "swash" );
                        desc143.putBoolean( idswash, false );
                        var idtitling = stringIDToTypeID( "titling" );
                        desc143.putBoolean( idtitling, false );
                        var idconnectionForms = stringIDToTypeID( "connectionForms" );
                        desc143.putBoolean( idconnectionForms, false );
                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                        desc143.putBoolean( idstylisticAlternates, false );
                        var idornaments = stringIDToTypeID( "ornaments" );
                        desc143.putBoolean( idornaments, false );
                        var idfigureStyle = stringIDToTypeID( "figureStyle" );
                        var idfigureStyle = stringIDToTypeID( "figureStyle" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc143.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                        desc143.putBoolean( idproportionalMetrics, false );
                        var idkana = stringIDToTypeID( "kana" );
                        desc143.putBoolean( idkana, false );
                        var iditalics = stringIDToTypeID( "italics" );
                        desc143.putBoolean( iditalics, false );
                        var idruby = stringIDToTypeID( "ruby" );
                        desc143.putBoolean( idruby, false );
                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                        var idrotated = stringIDToTypeID( "rotated" );
                        desc143.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
                        var idtextLanguage = stringIDToTypeID( "textLanguage" );
                        var idtextLanguage = stringIDToTypeID( "textLanguage" );
                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                        desc143.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                        var idmojiZume = stringIDToTypeID( "mojiZume" );
                        desc143.putDouble( idmojiZume, 0.000000 );
                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                        var idroman = stringIDToTypeID( "roman" );
                        desc143.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                        desc143.putBoolean( idenableWariChu, false );
                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                        desc143.putInteger( idwariChuCount, 2 );
                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                        desc143.putInteger( idwariChuLineGap, 0 );
                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                        desc143.putDouble( idwariChuScale, 0.500000 );
                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                        desc143.putInteger( idwariChuWidow, 2 );
                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                        desc143.putInteger( idwariChuOrphan, 2 );
                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                        desc143.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                        desc143.putInteger( idtcyUpDown, 0 );
                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                        desc143.putInteger( idtcyLeftRight, 0 );
                        var idleftAki = stringIDToTypeID( "leftAki" );
                        desc143.putDouble( idleftAki, -1.000000 );
                        var idrightAki = stringIDToTypeID( "rightAki" );
                        desc143.putDouble( idrightAki, -1.000000 );
                        var idjiDori = stringIDToTypeID( "jiDori" );
                        desc143.putInteger( idjiDori, 0 );
                        var idnoBreak = stringIDToTypeID( "noBreak" );
                        desc143.putBoolean( idnoBreak, false );
                        var idClr = charIDToTypeID( "Clr " );
                            var desc144 = new ActionDescriptor();
                            var idRd = charIDToTypeID( "Rd  " );
                            desc144.putDouble( idRd, textColour );
                            var idGrn = charIDToTypeID( "Grn " );
                            desc144.putDouble( idGrn, textColour );
                            var idBl = charIDToTypeID( "Bl  " );
                            desc144.putDouble( idBl, textColour );
                        var idRGBC = charIDToTypeID( "RGBC" );
                        desc143.putObject( idClr, idRGBC, desc144 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc145 = new ActionDescriptor();
                            var idRd = charIDToTypeID( "Rd  " );
                            desc145.putDouble( idRd, 0.000000 );
                            var idGrn = charIDToTypeID( "Grn " );
                            desc145.putDouble( idGrn, 0.000000 );
                            var idBl = charIDToTypeID( "Bl  " );
                            desc145.putDouble( idBl, 0.000000 );
                        var idRGBC = charIDToTypeID( "RGBC" );
                        desc143.putObject( idstrokeColor, idRGBC, desc145 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc143.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc143.putBoolean( idStrk, false );
                        var idfillFirst = stringIDToTypeID( "fillFirst" );
                        desc143.putBoolean( idfillFirst, true );
                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                        desc143.putBoolean( idfillOverPrint, false );
                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                        desc143.putBoolean( idstrokeOverPrint, false );
                        var idlineCap = stringIDToTypeID( "lineCap" );
                        var idlineCap = stringIDToTypeID( "lineCap" );
                        var idbuttCap = stringIDToTypeID( "buttCap" );
                        desc143.putEnumerated( idlineCap, idlineCap, idbuttCap );
                        var idlineJoin = stringIDToTypeID( "lineJoin" );
                        var idlineJoin = stringIDToTypeID( "lineJoin" );
                        var idmiterJoin = stringIDToTypeID( "miterJoin" );
                        desc143.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                        var idlineWidth = stringIDToTypeID( "lineWidth" );
                        var idPnt = charIDToTypeID( "#Pnt" );
                        desc143.putUnitDouble( idlineWidth, idPnt, 0.999875 );
                        var idmiterLimit = stringIDToTypeID( "miterLimit" );
                        var idPnt = charIDToTypeID( "#Pnt" );
                        desc143.putUnitDouble( idmiterLimit, idPnt, 3.999500 );
                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                        desc143.putDouble( idlineDashoffset, 0.000000 );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc142.putObject( iddefaultStyle, idTxtS, desc143 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc141.putObject( idparagraphStyle, idparagraphStyle, desc142 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list13.putObject( idparagraphStyleRange, desc141 );
        desc120.putList( idparagraphStyleRange, list13 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list14 = new ActionList();
        desc120.putList( idkerningRange, list14 );


        var list13 = new ActionList();
        if(flavourIndex > 0){
          var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
                  var desc141 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc141.putInteger( idFrom, flavourIndex+3 );
                  var idT = charIDToTypeID( "T   " );
                  desc141.putInteger( idT, flavourIndex+4 );
                  var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                      var desc142 = new ActionDescriptor();
                      var idAlgn = charIDToTypeID( "Algn" );
                      var idAlg = charIDToTypeID( "Alg " );
                      var idLeft = charIDToTypeID( "Left" );
                      desc142.putEnumerated( idAlgn, idAlg, idLeft );
                      var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                      var idstartIndent = stringIDToTypeID( "startIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                      var idendIndent = stringIDToTypeID( "endIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idendIndent, idPnt, 0.000000 );
                      var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idspaceBefore, idPnt, 34 ); ////////////////////////////////////
                      var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                      var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                      desc142.putInteger( iddropCapMultiplier, 1 );
                      var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                      desc142.putDouble( idautoLeadingPercentage, 1.200000 );
                      var idleadingType = stringIDToTypeID( "leadingType" );
                      var idleadingType = stringIDToTypeID( "leadingType" );
                      var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                      desc142.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                      var idhyphenate = stringIDToTypeID( "hyphenate" );
                      desc142.putBoolean( idhyphenate, false );
                      var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                      desc142.putInteger( idhyphenateWordSize, 6 );
                      var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                      desc142.putInteger( idhyphenatePreLength, 2 );
                      var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                      desc142.putInteger( idhyphenatePostLength, 2 );
                      var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                      desc142.putInteger( idhyphenateLimit, 0 );
                      var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                      desc142.putDouble( idhyphenationZone, 36.000000 );
                      var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                      desc142.putBoolean( idhyphenateCapitalized, true );
                      var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                      desc142.putDouble( idhyphenationPreference, 0.500000 );
                      var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                      desc142.putDouble( idjustificationWordMinimum, 0.800000 );
                      var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                      desc142.putDouble( idjustificationWordDesired, 1.000000 );
                      var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                      desc142.putDouble( idjustificationWordMaximum, 1.330000 );
                      var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                      desc142.putDouble( idjustificationLetterMinimum, 0.000000 );
                      var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                      desc142.putDouble( idjustificationLetterDesired, 0.000000 );
                      var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                      desc142.putDouble( idjustificationLetterMaximum, 0.000000 );
                      var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                      desc142.putDouble( idjustificationGlyphMinimum, 1.000000 );
                      var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                      desc142.putDouble( idjustificationGlyphDesired, 1.000000 );
                      var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                      desc142.putDouble( idjustificationGlyphMaximum, 1.000000 );
                      var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                      var idAlg = charIDToTypeID( "Alg " );
                      var idJstA = charIDToTypeID( "JstA" );
                      desc142.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                      var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                      desc142.putBoolean( idhangingRoman, false );
                      var idautoTCY = stringIDToTypeID( "autoTCY" );
                      desc142.putInteger( idautoTCY, 1 );
                      var idkeepTogether = stringIDToTypeID( "keepTogether" );
                      desc142.putBoolean( idkeepTogether, false );
                      var idburasagari = stringIDToTypeID( "burasagari" );
                      var idburasagari = stringIDToTypeID( "burasagari" );
                      var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                      desc142.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                      var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                      var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                      var idpushIn = stringIDToTypeID( "pushIn" );
                      desc142.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                      var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                      desc142.putBoolean( idkurikaeshiMojiShori, false );
                      var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                      desc142.putBoolean( idtextEveryLineComposer, false );
                      var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                      desc142.putDouble( iddefaultTabWidth, 36.000000 );
                      var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                          var desc143 = new ActionDescriptor();
                          var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                          desc143.putString( idfontPostScriptName, "NDPMTG" );
                          var idFntN = charIDToTypeID( "FntN" );
                          desc143.putString( idFntN, "Magic Symbols 2008" );
                          var idFntS = charIDToTypeID( "FntS" );
                          desc143.putString( idFntS, "Regular" );
                          var idScrp = charIDToTypeID( "Scrp" );
                          desc143.putInteger( idScrp, 0 );
                          var idFntT = charIDToTypeID( "FntT" );
                          desc143.putInteger( idFntT, 1 );
                          var idSz = charIDToTypeID( "Sz  " );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idSz, idPnt, 11.998500 );
                          var idHrzS = charIDToTypeID( "HrzS" );
                          desc143.putDouble( idHrzS, 100.000000 );
                          var idVrtS = charIDToTypeID( "VrtS" );
                          desc143.putDouble( idVrtS, 100.000000 );
                          var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                          desc143.putBoolean( idsyntheticBold, false );
                          var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                          desc143.putBoolean( idsyntheticItalic, false );
                          var idautoLeading = stringIDToTypeID( "autoLeading" );
                          desc143.putBoolean( idautoLeading, false );
                          var idTrck = charIDToTypeID( "Trck" );
                          desc143.putInteger( idTrck, 0 );
                          var idBsln = charIDToTypeID( "Bsln" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idBsln, idPnt, 0.000000 );
                          var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                          desc143.putDouble( idcharacterRotation, 0.000000 );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idmetricsKern = stringIDToTypeID( "metricsKern" );
                          desc143.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idfontCaps, idfontCaps, idNrml );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idbaseline, idbaseline, idNrml );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idotbaseline, idotbaseline, idNrml );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                          desc143.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idunderlineOff = stringIDToTypeID( "underlineOff" );
                          desc143.putEnumerated( idUndl, idUndl, idunderlineOff );
                          var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                          var idligature = stringIDToTypeID( "ligature" );
                          desc143.putBoolean( idligature, true );
                          var idaltligature = stringIDToTypeID( "altligature" );
                          desc143.putBoolean( idaltligature, false );
                          var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                          desc143.putBoolean( idcontextualLigatures, false );
                          var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                          desc143.putBoolean( idalternateLigatures, false );
                          var idoldStyle = stringIDToTypeID( "oldStyle" );
                          desc143.putBoolean( idoldStyle, false );
                          var idfractions = stringIDToTypeID( "fractions" );
                          desc143.putBoolean( idfractions, false );
                          var idordinals = stringIDToTypeID( "ordinals" );
                          desc143.putBoolean( idordinals, false );
                          var idswash = stringIDToTypeID( "swash" );
                          desc143.putBoolean( idswash, false );
                          var idtitling = stringIDToTypeID( "titling" );
                          desc143.putBoolean( idtitling, false );
                          var idconnectionForms = stringIDToTypeID( "connectionForms" );
                          desc143.putBoolean( idconnectionForms, false );
                          var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                          desc143.putBoolean( idstylisticAlternates, false );
                          var idornaments = stringIDToTypeID( "ornaments" );
                          desc143.putBoolean( idornaments, false );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                          var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                          desc143.putBoolean( idproportionalMetrics, false );
                          var idkana = stringIDToTypeID( "kana" );
                          desc143.putBoolean( idkana, false );
                          var iditalics = stringIDToTypeID( "italics" );
                          desc143.putBoolean( iditalics, false );
                          var idruby = stringIDToTypeID( "ruby" );
                          desc143.putBoolean( idruby, false );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idrotated = stringIDToTypeID( "rotated" );
                          desc143.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                          desc143.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                          var idmojiZume = stringIDToTypeID( "mojiZume" );
                          desc143.putDouble( idmojiZume, 0.000000 );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idroman = stringIDToTypeID( "roman" );
                          desc143.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                          var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                          desc143.putBoolean( idenableWariChu, false );
                          var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                          desc143.putInteger( idwariChuCount, 2 );
                          var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                          desc143.putInteger( idwariChuLineGap, 0 );
                          var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                          desc143.putDouble( idwariChuScale, 0.500000 );
                          var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                          desc143.putInteger( idwariChuWidow, 2 );
                          var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                          desc143.putInteger( idwariChuOrphan, 2 );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                          desc143.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                          var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                          desc143.putInteger( idtcyUpDown, 0 );
                          var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                          desc143.putInteger( idtcyLeftRight, 0 );
                          var idleftAki = stringIDToTypeID( "leftAki" );
                          desc143.putDouble( idleftAki, -1.000000 );
                          var idrightAki = stringIDToTypeID( "rightAki" );
                          desc143.putDouble( idrightAki, -1.000000 );
                          var idjiDori = stringIDToTypeID( "jiDori" );
                          desc143.putInteger( idjiDori, 0 );
                          var idnoBreak = stringIDToTypeID( "noBreak" );
                          desc143.putBoolean( idnoBreak, false );
                          var idClr = charIDToTypeID( "Clr " );
                              var desc144 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc144.putDouble( idRd, textColour );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc144.putDouble( idGrn, textColour );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc144.putDouble( idBl, textColour );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc143.putObject( idClr, idRGBC, desc144 );
                          var idstrokeColor = stringIDToTypeID( "strokeColor" );
                              var desc145 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc145.putDouble( idRd, 0.000000 );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc145.putDouble( idGrn, 0.000000 );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc145.putDouble( idBl, 0.000000 );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc143.putObject( idstrokeColor, idRGBC, desc145 );
                          var idFl = charIDToTypeID( "Fl  " );
                          desc143.putBoolean( idFl, true );
                          var idStrk = charIDToTypeID( "Strk" );
                          desc143.putBoolean( idStrk, false );
                          var idfillFirst = stringIDToTypeID( "fillFirst" );
                          desc143.putBoolean( idfillFirst, true );
                          var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                          desc143.putBoolean( idfillOverPrint, false );
                          var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                          desc143.putBoolean( idstrokeOverPrint, false );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idbuttCap = stringIDToTypeID( "buttCap" );
                          desc143.putEnumerated( idlineCap, idlineCap, idbuttCap );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idmiterJoin = stringIDToTypeID( "miterJoin" );
                          desc143.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                          var idlineWidth = stringIDToTypeID( "lineWidth" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idlineWidth, idPnt, 0.999875 );
                          var idmiterLimit = stringIDToTypeID( "miterLimit" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idmiterLimit, idPnt, 3.999500 );
                          var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                          desc143.putDouble( idlineDashoffset, 0.000000 );
                      var idTxtS = charIDToTypeID( "TxtS" );
                      desc142.putObject( iddefaultStyle, idTxtS, desc143 );
                  var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                  desc141.putObject( idparagraphStyle, idparagraphStyle, desc142 );
              var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
              list13.putObject( idparagraphStyleRange, desc141 );
          desc120.putList( idparagraphStyleRange, list13 );
          var idkerningRange = stringIDToTypeID( "kerningRange" );
              var list14 = new ActionList();
          desc120.putList( idkerningRange, list14 );
        }
        //alert(inputString.length); alert(flavourIndex);

        if(inputString.indexOf("â€¢") >= 0){
          var startIndexBullet = inputString.indexOf("â€¢");
          var endIndexBullet = inputString.lastIndexOf("â€¢");

          var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
              var list13 = new ActionList();
                  var desc141 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc141.putInteger( idFrom, startIndexBullet );
                  var idT = charIDToTypeID( "T   " );
                  desc141.putInteger( idT, endIndexBullet+1 );
                  var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                      var desc142 = new ActionDescriptor();
                      var idAlgn = charIDToTypeID( "Algn" );
                      var idAlg = charIDToTypeID( "Alg " );
                      var idLeft = charIDToTypeID( "Left" );
                      desc142.putEnumerated( idAlgn, idAlg, idLeft );
                      var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idfirstLineIndent, idPnt, -41.000000 );
                      var idstartIndent = stringIDToTypeID( "startIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idstartIndent, idPnt, 41.000000 );
                      var idendIndent = stringIDToTypeID( "endIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idendIndent, idPnt, 0.000000 );
                      var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idspaceBefore, idPnt, 10.000000 ); ////////////////////////////////////
                      var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                      var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                      desc142.putInteger( iddropCapMultiplier, 1 );
                      var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                      desc142.putDouble( idautoLeadingPercentage, 1.200000 );
                      var idleadingType = stringIDToTypeID( "leadingType" );
                      var idleadingType = stringIDToTypeID( "leadingType" );
                      var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                      desc142.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                      var idhyphenate = stringIDToTypeID( "hyphenate" );
                      desc142.putBoolean( idhyphenate, false );
                      var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                      desc142.putInteger( idhyphenateWordSize, 6 );
                      var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                      desc142.putInteger( idhyphenatePreLength, 2 );
                      var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                      desc142.putInteger( idhyphenatePostLength, 2 );
                      var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                      desc142.putInteger( idhyphenateLimit, 0 );
                      var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                      desc142.putDouble( idhyphenationZone, 36.000000 );
                      var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                      desc142.putBoolean( idhyphenateCapitalized, true );
                      var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                      desc142.putDouble( idhyphenationPreference, 0.500000 );
                      var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                      desc142.putDouble( idjustificationWordMinimum, 0.800000 );
                      var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                      desc142.putDouble( idjustificationWordDesired, 1.000000 );
                      var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                      desc142.putDouble( idjustificationWordMaximum, 1.330000 );
                      var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                      desc142.putDouble( idjustificationLetterMinimum, 0.000000 );
                      var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                      desc142.putDouble( idjustificationLetterDesired, 0.000000 );
                      var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                      desc142.putDouble( idjustificationLetterMaximum, 0.000000 );
                      var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                      desc142.putDouble( idjustificationGlyphMinimum, 1.000000 );
                      var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                      desc142.putDouble( idjustificationGlyphDesired, 1.000000 );
                      var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                      desc142.putDouble( idjustificationGlyphMaximum, 1.000000 );
                      var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                      var idAlg = charIDToTypeID( "Alg " );
                      var idJstA = charIDToTypeID( "JstA" );
                      desc142.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                      var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                      desc142.putBoolean( idhangingRoman, false );
                      var idautoTCY = stringIDToTypeID( "autoTCY" );
                      desc142.putInteger( idautoTCY, 1 );
                      var idkeepTogether = stringIDToTypeID( "keepTogether" );
                      desc142.putBoolean( idkeepTogether, false );
                      var idburasagari = stringIDToTypeID( "burasagari" );
                      var idburasagari = stringIDToTypeID( "burasagari" );
                      var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                      desc142.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                      var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                      var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                      var idpushIn = stringIDToTypeID( "pushIn" );
                      desc142.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                      var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                      desc142.putBoolean( idkurikaeshiMojiShori, false );
                      var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                      desc142.putBoolean( idtextEveryLineComposer, false );
                      var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                      desc142.putDouble( iddefaultTabWidth, 36.000000 );
                      var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                          var desc143 = new ActionDescriptor();
                          var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                          desc143.putString( idfontPostScriptName, "NDPMTG" );
                          var idFntN = charIDToTypeID( "FntN" );
                          desc143.putString( idFntN, "Magic Symbols 2008" );
                          var idFntS = charIDToTypeID( "FntS" );
                          desc143.putString( idFntS, "Regular" );
                          var idScrp = charIDToTypeID( "Scrp" );
                          desc143.putInteger( idScrp, 0 );
                          var idFntT = charIDToTypeID( "FntT" );
                          desc143.putInteger( idFntT, 1 );
                          var idSz = charIDToTypeID( "Sz  " );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idSz, idPnt, 11.998500 );
                          var idHrzS = charIDToTypeID( "HrzS" );
                          desc143.putDouble( idHrzS, 100.000000 );
                          var idVrtS = charIDToTypeID( "VrtS" );
                          desc143.putDouble( idVrtS, 100.000000 );
                          var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                          desc143.putBoolean( idsyntheticBold, false );
                          var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                          desc143.putBoolean( idsyntheticItalic, false );
                          var idautoLeading = stringIDToTypeID( "autoLeading" );
                          desc143.putBoolean( idautoLeading, false );
                          var idTrck = charIDToTypeID( "Trck" );
                          desc143.putInteger( idTrck, 0 );
                          var idBsln = charIDToTypeID( "Bsln" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idBsln, idPnt, 0.000000 );
                          var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                          desc143.putDouble( idcharacterRotation, 0.000000 );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idmetricsKern = stringIDToTypeID( "metricsKern" );
                          desc143.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idfontCaps, idfontCaps, idNrml );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idbaseline, idbaseline, idNrml );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idotbaseline, idotbaseline, idNrml );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                          desc143.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idunderlineOff = stringIDToTypeID( "underlineOff" );
                          desc143.putEnumerated( idUndl, idUndl, idunderlineOff );
                          var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                          var idligature = stringIDToTypeID( "ligature" );
                          desc143.putBoolean( idligature, true );
                          var idaltligature = stringIDToTypeID( "altligature" );
                          desc143.putBoolean( idaltligature, false );
                          var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                          desc143.putBoolean( idcontextualLigatures, false );
                          var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                          desc143.putBoolean( idalternateLigatures, false );
                          var idoldStyle = stringIDToTypeID( "oldStyle" );
                          desc143.putBoolean( idoldStyle, false );
                          var idfractions = stringIDToTypeID( "fractions" );
                          desc143.putBoolean( idfractions, false );
                          var idordinals = stringIDToTypeID( "ordinals" );
                          desc143.putBoolean( idordinals, false );
                          var idswash = stringIDToTypeID( "swash" );
                          desc143.putBoolean( idswash, false );
                          var idtitling = stringIDToTypeID( "titling" );
                          desc143.putBoolean( idtitling, false );
                          var idconnectionForms = stringIDToTypeID( "connectionForms" );
                          desc143.putBoolean( idconnectionForms, false );
                          var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                          desc143.putBoolean( idstylisticAlternates, false );
                          var idornaments = stringIDToTypeID( "ornaments" );
                          desc143.putBoolean( idornaments, false );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                          var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                          desc143.putBoolean( idproportionalMetrics, false );
                          var idkana = stringIDToTypeID( "kana" );
                          desc143.putBoolean( idkana, false );
                          var iditalics = stringIDToTypeID( "italics" );
                          desc143.putBoolean( iditalics, false );
                          var idruby = stringIDToTypeID( "ruby" );
                          desc143.putBoolean( idruby, false );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idrotated = stringIDToTypeID( "rotated" );
                          desc143.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                          desc143.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                          var idmojiZume = stringIDToTypeID( "mojiZume" );
                          desc143.putDouble( idmojiZume, 0.000000 );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idroman = stringIDToTypeID( "roman" );
                          desc143.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                          var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                          desc143.putBoolean( idenableWariChu, false );
                          var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                          desc143.putInteger( idwariChuCount, 2 );
                          var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                          desc143.putInteger( idwariChuLineGap, 0 );
                          var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                          desc143.putDouble( idwariChuScale, 0.500000 );
                          var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                          desc143.putInteger( idwariChuWidow, 2 );
                          var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                          desc143.putInteger( idwariChuOrphan, 2 );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                          desc143.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                          var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                          desc143.putInteger( idtcyUpDown, 0 );
                          var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                          desc143.putInteger( idtcyLeftRight, 0 );
                          var idleftAki = stringIDToTypeID( "leftAki" );
                          desc143.putDouble( idleftAki, -1.000000 );
                          var idrightAki = stringIDToTypeID( "rightAki" );
                          desc143.putDouble( idrightAki, -1.000000 );
                          var idjiDori = stringIDToTypeID( "jiDori" );
                          desc143.putInteger( idjiDori, 0 );
                          var idnoBreak = stringIDToTypeID( "noBreak" );
                          desc143.putBoolean( idnoBreak, false );
                          var idClr = charIDToTypeID( "Clr " );
                              var desc144 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc144.putDouble( idRd, textColour );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc144.putDouble( idGrn, textColour );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc144.putDouble( idBl, textColour );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc143.putObject( idClr, idRGBC, desc144 );
                          var idstrokeColor = stringIDToTypeID( "strokeColor" );
                              var desc145 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc145.putDouble( idRd, 0.000000 );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc145.putDouble( idGrn, 0.000000 );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc145.putDouble( idBl, 0.000000 );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc143.putObject( idstrokeColor, idRGBC, desc145 );
                          var idFl = charIDToTypeID( "Fl  " );
                          desc143.putBoolean( idFl, true );
                          var idStrk = charIDToTypeID( "Strk" );
                          desc143.putBoolean( idStrk, false );
                          var idfillFirst = stringIDToTypeID( "fillFirst" );
                          desc143.putBoolean( idfillFirst, true );
                          var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                          desc143.putBoolean( idfillOverPrint, false );
                          var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                          desc143.putBoolean( idstrokeOverPrint, false );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idbuttCap = stringIDToTypeID( "buttCap" );
                          desc143.putEnumerated( idlineCap, idlineCap, idbuttCap );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idmiterJoin = stringIDToTypeID( "miterJoin" );
                          desc143.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                          var idlineWidth = stringIDToTypeID( "lineWidth" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idlineWidth, idPnt, 0.999875 );
                          var idmiterLimit = stringIDToTypeID( "miterLimit" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idmiterLimit, idPnt, 3.999500 );
                          var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                          desc143.putDouble( idlineDashoffset, 0.000000 );
                      var idTxtS = charIDToTypeID( "TxtS" );
                      desc142.putObject( iddefaultStyle, idTxtS, desc143 );
                  var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                  desc141.putObject( idparagraphStyle, idparagraphStyle, desc142 );
              var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
              list13.putObject( idparagraphStyleRange, desc141 );
          desc120.putList( idparagraphStyleRange, list13 );
          var idkerningRange = stringIDToTypeID( "kerningRange" );
              var list14 = new ActionList();
          desc120.putList( idkerningRange, list14 );
        }

        if(quoteIndex > 0){
          var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
                  var desc141 = new ActionDescriptor();
                  var idFrom = charIDToTypeID( "From" );
                  desc141.putInteger( idFrom, quoteIndex+3 );
                  var idT = charIDToTypeID( "T   " );
                  desc141.putInteger( idT, inputString.length );
                  var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                      var desc142 = new ActionDescriptor();
                      var idAlgn = charIDToTypeID( "Algn" );
                      var idAlg = charIDToTypeID( "Alg " );
                      var idLeft = charIDToTypeID( "Left" );
                      desc142.putEnumerated( idAlgn, idAlg, idLeft );
                      var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                      var idstartIndent = stringIDToTypeID( "startIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                      var idendIndent = stringIDToTypeID( "endIndent" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idendIndent, idPnt, 0.000000 );
                      var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idspaceBefore, idPnt, 0 ); ////////////////////////////////////
                      var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                      var idPnt = charIDToTypeID( "#Pnt" );
                      desc142.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                      var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                      desc142.putInteger( iddropCapMultiplier, 1 );
                      var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                      desc142.putDouble( idautoLeadingPercentage, 1.200000 );
                      var idleadingType = stringIDToTypeID( "leadingType" );
                      var idleadingType = stringIDToTypeID( "leadingType" );
                      var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                      desc142.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                      var idhyphenate = stringIDToTypeID( "hyphenate" );
                      desc142.putBoolean( idhyphenate, false );
                      var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                      desc142.putInteger( idhyphenateWordSize, 6 );
                      var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                      desc142.putInteger( idhyphenatePreLength, 2 );
                      var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                      desc142.putInteger( idhyphenatePostLength, 2 );
                      var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                      desc142.putInteger( idhyphenateLimit, 0 );
                      var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                      desc142.putDouble( idhyphenationZone, 36.000000 );
                      var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                      desc142.putBoolean( idhyphenateCapitalized, true );
                      var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                      desc142.putDouble( idhyphenationPreference, 0.500000 );
                      var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                      desc142.putDouble( idjustificationWordMinimum, 0.800000 );
                      var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                      desc142.putDouble( idjustificationWordDesired, 1.000000 );
                      var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                      desc142.putDouble( idjustificationWordMaximum, 1.330000 );
                      var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                      desc142.putDouble( idjustificationLetterMinimum, 0.000000 );
                      var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                      desc142.putDouble( idjustificationLetterDesired, 0.000000 );
                      var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                      desc142.putDouble( idjustificationLetterMaximum, 0.000000 );
                      var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                      desc142.putDouble( idjustificationGlyphMinimum, 1.000000 );
                      var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                      desc142.putDouble( idjustificationGlyphDesired, 1.000000 );
                      var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                      desc142.putDouble( idjustificationGlyphMaximum, 1.000000 );
                      var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                      var idAlg = charIDToTypeID( "Alg " );
                      var idJstA = charIDToTypeID( "JstA" );
                      desc142.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                      var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                      desc142.putBoolean( idhangingRoman, false );
                      var idautoTCY = stringIDToTypeID( "autoTCY" );
                      desc142.putInteger( idautoTCY, 1 );
                      var idkeepTogether = stringIDToTypeID( "keepTogether" );
                      desc142.putBoolean( idkeepTogether, false );
                      var idburasagari = stringIDToTypeID( "burasagari" );
                      var idburasagari = stringIDToTypeID( "burasagari" );
                      var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                      desc142.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                      var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                      var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                      var idpushIn = stringIDToTypeID( "pushIn" );
                      desc142.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                      var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                      desc142.putBoolean( idkurikaeshiMojiShori, false );
                      var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                      desc142.putBoolean( idtextEveryLineComposer, false );
                      var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                      desc142.putDouble( iddefaultTabWidth, 36.000000 );
                      var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                          var desc143 = new ActionDescriptor();
                          var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                          desc143.putString( idfontPostScriptName, "NDPMTG" );
                          var idFntN = charIDToTypeID( "FntN" );
                          desc143.putString( idFntN, "Magic Symbols 2008" );
                          var idFntS = charIDToTypeID( "FntS" );
                          desc143.putString( idFntS, "Regular" );
                          var idScrp = charIDToTypeID( "Scrp" );
                          desc143.putInteger( idScrp, 0 );
                          var idFntT = charIDToTypeID( "FntT" );
                          desc143.putInteger( idFntT, 1 );
                          var idSz = charIDToTypeID( "Sz  " );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idSz, idPnt, 11.998500 );
                          var idHrzS = charIDToTypeID( "HrzS" );
                          desc143.putDouble( idHrzS, 100.000000 );
                          var idVrtS = charIDToTypeID( "VrtS" );
                          desc143.putDouble( idVrtS, 100.000000 );
                          var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                          desc143.putBoolean( idsyntheticBold, false );
                          var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                          desc143.putBoolean( idsyntheticItalic, false );
                          var idautoLeading = stringIDToTypeID( "autoLeading" );
                          desc143.putBoolean( idautoLeading, false );
                          var idTrck = charIDToTypeID( "Trck" );
                          desc143.putInteger( idTrck, 0 );
                          var idBsln = charIDToTypeID( "Bsln" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idBsln, idPnt, 0.000000 );
                          var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                          desc143.putDouble( idcharacterRotation, 0.000000 );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idAtKr = charIDToTypeID( "AtKr" );
                          var idmetricsKern = stringIDToTypeID( "metricsKern" );
                          desc143.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idfontCaps = stringIDToTypeID( "fontCaps" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idfontCaps, idfontCaps, idNrml );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idbaseline = stringIDToTypeID( "baseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idbaseline, idbaseline, idNrml );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idotbaseline = stringIDToTypeID( "otbaseline" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idotbaseline, idotbaseline, idNrml );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethrough = stringIDToTypeID( "strikethrough" );
                          var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                          desc143.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idUndl = charIDToTypeID( "Undl" );
                          var idunderlineOff = stringIDToTypeID( "underlineOff" );
                          desc143.putEnumerated( idUndl, idUndl, idunderlineOff );
                          var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                          var idligature = stringIDToTypeID( "ligature" );
                          desc143.putBoolean( idligature, true );
                          var idaltligature = stringIDToTypeID( "altligature" );
                          desc143.putBoolean( idaltligature, false );
                          var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                          desc143.putBoolean( idcontextualLigatures, false );
                          var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                          desc143.putBoolean( idalternateLigatures, false );
                          var idoldStyle = stringIDToTypeID( "oldStyle" );
                          desc143.putBoolean( idoldStyle, false );
                          var idfractions = stringIDToTypeID( "fractions" );
                          desc143.putBoolean( idfractions, false );
                          var idordinals = stringIDToTypeID( "ordinals" );
                          desc143.putBoolean( idordinals, false );
                          var idswash = stringIDToTypeID( "swash" );
                          desc143.putBoolean( idswash, false );
                          var idtitling = stringIDToTypeID( "titling" );
                          desc143.putBoolean( idtitling, false );
                          var idconnectionForms = stringIDToTypeID( "connectionForms" );
                          desc143.putBoolean( idconnectionForms, false );
                          var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                          desc143.putBoolean( idstylisticAlternates, false );
                          var idornaments = stringIDToTypeID( "ornaments" );
                          desc143.putBoolean( idornaments, false );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idfigureStyle = stringIDToTypeID( "figureStyle" );
                          var idNrml = charIDToTypeID( "Nrml" );
                          desc143.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                          var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                          desc143.putBoolean( idproportionalMetrics, false );
                          var idkana = stringIDToTypeID( "kana" );
                          desc143.putBoolean( idkana, false );
                          var iditalics = stringIDToTypeID( "italics" );
                          desc143.putBoolean( iditalics, false );
                          var idruby = stringIDToTypeID( "ruby" );
                          desc143.putBoolean( idruby, false );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                          var idrotated = stringIDToTypeID( "rotated" );
                          desc143.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idtextLanguage = stringIDToTypeID( "textLanguage" );
                          var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                          desc143.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                          var idmojiZume = stringIDToTypeID( "mojiZume" );
                          desc143.putDouble( idmojiZume, 0.000000 );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                          var idroman = stringIDToTypeID( "roman" );
                          desc143.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                          var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                          desc143.putBoolean( idenableWariChu, false );
                          var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                          desc143.putInteger( idwariChuCount, 2 );
                          var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                          desc143.putInteger( idwariChuLineGap, 0 );
                          var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                          desc143.putDouble( idwariChuScale, 0.500000 );
                          var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                          desc143.putInteger( idwariChuWidow, 2 );
                          var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                          desc143.putInteger( idwariChuOrphan, 2 );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                          var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                          desc143.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                          var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                          desc143.putInteger( idtcyUpDown, 0 );
                          var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                          desc143.putInteger( idtcyLeftRight, 0 );
                          var idleftAki = stringIDToTypeID( "leftAki" );
                          desc143.putDouble( idleftAki, -1.000000 );
                          var idrightAki = stringIDToTypeID( "rightAki" );
                          desc143.putDouble( idrightAki, -1.000000 );
                          var idjiDori = stringIDToTypeID( "jiDori" );
                          desc143.putInteger( idjiDori, 0 );
                          var idnoBreak = stringIDToTypeID( "noBreak" );
                          desc143.putBoolean( idnoBreak, false );
                          var idClr = charIDToTypeID( "Clr " );
                              var desc144 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc144.putDouble( idRd, textColour );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc144.putDouble( idGrn, textColour );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc144.putDouble( idBl, textColour );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc143.putObject( idClr, idRGBC, desc144 );
                          var idstrokeColor = stringIDToTypeID( "strokeColor" );
                              var desc145 = new ActionDescriptor();
                              var idRd = charIDToTypeID( "Rd  " );
                              desc145.putDouble( idRd, 0.000000 );
                              var idGrn = charIDToTypeID( "Grn " );
                              desc145.putDouble( idGrn, 0.000000 );
                              var idBl = charIDToTypeID( "Bl  " );
                              desc145.putDouble( idBl, 0.000000 );
                          var idRGBC = charIDToTypeID( "RGBC" );
                          desc143.putObject( idstrokeColor, idRGBC, desc145 );
                          var idFl = charIDToTypeID( "Fl  " );
                          desc143.putBoolean( idFl, true );
                          var idStrk = charIDToTypeID( "Strk" );
                          desc143.putBoolean( idStrk, false );
                          var idfillFirst = stringIDToTypeID( "fillFirst" );
                          desc143.putBoolean( idfillFirst, true );
                          var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                          desc143.putBoolean( idfillOverPrint, false );
                          var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                          desc143.putBoolean( idstrokeOverPrint, false );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idlineCap = stringIDToTypeID( "lineCap" );
                          var idbuttCap = stringIDToTypeID( "buttCap" );
                          desc143.putEnumerated( idlineCap, idlineCap, idbuttCap );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idlineJoin = stringIDToTypeID( "lineJoin" );
                          var idmiterJoin = stringIDToTypeID( "miterJoin" );
                          desc143.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                          var idlineWidth = stringIDToTypeID( "lineWidth" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idlineWidth, idPnt, 0.999875 );
                          var idmiterLimit = stringIDToTypeID( "miterLimit" );
                          var idPnt = charIDToTypeID( "#Pnt" );
                          desc143.putUnitDouble( idmiterLimit, idPnt, 3.999500 );
                          var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                          desc143.putDouble( idlineDashoffset, 0.000000 );
                      var idTxtS = charIDToTypeID( "TxtS" );
                      desc142.putObject( iddefaultStyle, idTxtS, desc143 );
                  var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                  desc141.putObject( idparagraphStyle, idparagraphStyle, desc142 );
              var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
              list13.putObject( idparagraphStyleRange, desc141 );
          desc120.putList( idparagraphStyleRange, list13 );
          var idkerningRange = stringIDToTypeID( "kerningRange" );
              var list14 = new ActionList();
          desc120.putList( idkerningRange, list14 );
        }

    var idTxLr = charIDToTypeID( "TxLr" );
    desc119.putObject( idT, idTxLr, desc120 );
executeAction( idsetd, desc119, DialogModes.NO );
}
